{
    "$schema": "http://json-schema.org/draft-07/schema",
    "title": "demux",
    "description": "Convert bcl files to fastq files using bcl2fastq, bcl-convert or cellranger mkfastq\nInformation about upgrading from bcl2fastq via\nhttps://emea.support.illumina.com/bulletins/2020/10/upgrading-from-bcl2fastq-to-bcl-convert.html\nand https://support.illumina.com/sequencing/sequencing_software/bcl-convert/compatibility.html\n",
    "type": "object","definitions": {
      "arguments" : {
        "title": "Arguments",
        "type": "object",
        "description": "Input parameters for this pipeline",
        "default": "",
        "properties": {
          "id": {
            "type":"string",
            "description": "ID of the sample.",
            
            
            "default": ""
          },
          "input": {
            "type":"string",
            "description": "Input run directory",
            
            
            "default": ""
          },
          "sample_sheet": {
            "type":"string",
            "description": "Pointer to the sample sheet",
            
            
            "default": ""
          },
          "demultiplexer": {
            "type":"string",
            "description": "The multiplexer to use, one of bclconvert or mkfastq",
            
            "enum": ["bclconvert", "bcl2fastq", "mkfastq"],
            "default": ""
          },
          "ignore_missing": {
            "type":"boolean",
            "description": "Should the demultiplexer ignore missing entities (filter, ...)",
            
            
            "default": ""
          }
        }
      },
      "nextflow input-output arguments" : {
        "title": "Nextflow input-output arguments",
        "type": "object",
        "description": "Input/output parameters for Nextflow itself. Please note that both publishDir and publish_dir are supported but at least one has to be configured.",
        "default": "",
        "properties": {
          "publish_dir": {
            "type":"string",
            "description": "Path to an output directory.",
            
            
            "default": ""
          },
          "param_list": {
            "type":"string",
            "description": "Allows inputting multiple parameter sets to initialise a Nextflow channel. Possible formats are csv, json, yaml, or simply a yaml_blob.\nA csv should have column names which correspond to the different arguments of this pipeline.\nA json or a yaml file should be a list of maps, each of which has keys corresponding to the arguments of the pipeline.\nA yaml blob can also be passed directly as a parameter.\nInside the Nextflow pipeline code, params.params_list can also be used to directly a list of parameter sets.\nWhen passing a csv, json or yaml, relative path names are relativized to the location of the parameter file.",
            "hidden": true,
            
            "default": ""
          },
          "param_list_format": {
            "type":"string",
            "description": "Manually specify the param_list_format. Must be one of \u0027csv\u0027, \u0027json\u0027, \u0027yaml\u0027, \u0027yaml_blob\u0027, \u0027asis\u0027 or \u0027none\u0027.",
            "hidden": true,
            "enum": ["csv", "json", "yaml", "yaml_blob", "asis", "none"],
            "default": ""
          }
        }
      }
    },
    "allOf": [
      {
        "$ref": "#/definitions/arguments"
      },
      {
        "$ref": "#/definitions/nextflow input-output arguments"
      }
      
    ]
}
