functionality:
  name: "cellxgene_census"
  namespace: "query"
  version: "main_build"
  authors:
  - name: "Matthias Beyens"
    info:
      role: "Contributor"
      links:
        github: "MatthiasBeyens"
        orcid: "0000-0003-3304-0706"
        email: "matthias.beyens@gmail.com"
        linkedin: "mbeyens"
      organizations:
      - name: "Janssen Pharmaceuticals"
        href: "https://www.janssen.com"
        role: "Principal Scientist"
  - name: "Dries De Maeyer"
    roles:
    - "author"
    info:
      role: "Core Team Member"
      links:
        email: "ddemaeyer@gmail.com"
        github: "ddemaeyer"
        linkedin: "dries-de-maeyer-b46a814"
      organizations:
      - name: "Janssen Pharmaceuticals"
        href: "https://www.janssen.com"
        role: "Principal Scientist"
  argument_groups:
  - name: "Inputs"
    description: "Arguments related to the input (aka query) dataset."
    arguments:
    - type: "string"
      name: "--input_database"
      description: "Full input database S3 prefix URL. Default: CellxGene Census"
      info: null
      example:
      - "s3://"
      default:
      - "CellxGene"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--modality"
      description: "Which modality to store the output in."
      info: null
      default:
      - "rna"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--cellxgene_release"
      description: "CellxGene Census release date. More information: https://chanzuckerberg.github.io/cellxgene-census/cellxgene_census_docsite_data_release_info.html"
      info: null
      default:
      - "2023-05-15"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Query"
    description: "Arguments related to the query."
    arguments:
    - type: "string"
      name: "--species"
      description: "Specie(s) of interest. If not specified, Homo Sapiens will be\
        \ queried."
      info: null
      example:
      - "homo_sapiens"
      default:
      - "homo_sapiens"
      required: false
      choices:
      - "homo_sapiens"
      - "mus_musculus"
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--cell_query"
      description: "The query for selecting the cells as defined by the cellxgene\
        \ census schema."
      info: null
      example:
      - "is_primary_data == True and cell_type_ontology_term_id in ['CL:0000136',\
        \ 'CL:1000311', 'CL:0002616'] and suspension_type == 'cell'"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--cells_filter_columns"
      description: "The query for selecting the cells as defined by the cellxgene\
        \ census schema."
      info: null
      example:
      - "dataset_id"
      - "tissue"
      - "assay"
      - "disease"
      - "cell_type"
      required: false
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "double"
      name: "--min_cells_filter_columns"
      description: "Minimum of amount of summed cells_filter_columns cells"
      info: null
      example:
      - 100.0
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Outputs"
    description: "Output arguments."
    arguments:
    - type: "file"
      name: "--output"
      description: "Output h5mu file."
      info: null
      example:
      - "output.h5mu"
      must_exist: true
      create_parent: true
      required: true
      direction: "output"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--output_compression"
      info: null
      example:
      - "gzip"
      required: false
      choices:
      - "gzip"
      - "lzf"
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  resources:
  - type: "python_script"
    path: "script.py"
    is_executable: true
  - type: "file"
    path: "src/utils/setup_logger.py"
  - type: "file"
    path: "./src/workflows/utils/labels.config"
    dest: "nextflow_labels.config"
  description: "Query CellxGene Census or user-specified TileDBSoma object, and eventually\
    \ fetch cell and gene metadata or/and expression counts."
  test_resources:
  - type: "python_script"
    path: "test.py"
    is_executable: true
  - type: "file"
    path: "src/base/openpipelinetestutils"
    dest: "openpipelinetestutils"
  info: null
  status: "enabled"
  requirements:
    commands:
    - "ps"
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "python:3.9"
  target_organization: "openpipelines-bio"
  target_registry: "ghcr.io"
  target_tag: "main_build"
  namespace_separator: "_"
  resolve_volume: "Automatic"
  chown: true
  setup_strategy: "ifneedbepullelsecachedbuild"
  target_image_source: "https://github.com/openpipelines-bio/openpipeline"
  setup:
  - type: "python"
    user: false
    packages:
    - "anndata~=0.9.1"
    - "mudata~=0.2.3"
    - "pandas!=2.1.2"
    - "cellxgene-census~=1.2.0"
    - "obonet~=1.0.0"
    upgrade: true
  test_setup:
  - type: "python"
    user: false
    packages:
    - "viashpy==0.6.0"
    upgrade: true
  entrypoint: []
  cmd: null
- type: "nextflow"
  id: "nextflow"
  directives:
    label:
    - "highmem"
    - "midcpu"
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: false
    transcript: false
    publish: false
  config:
    labels:
      mem1gb: "memory = 1.GB"
      mem2gb: "memory = 2.GB"
      mem4gb: "memory = 4.GB"
      mem8gb: "memory = 8.GB"
      mem16gb: "memory = 16.GB"
      mem32gb: "memory = 32.GB"
      mem64gb: "memory = 64.GB"
      mem128gb: "memory = 128.GB"
      mem256gb: "memory = 256.GB"
      mem512gb: "memory = 512.GB"
      mem1tb: "memory = 1.TB"
      mem2tb: "memory = 2.TB"
      mem4tb: "memory = 4.TB"
      mem8tb: "memory = 8.TB"
      mem16tb: "memory = 16.TB"
      mem32tb: "memory = 32.TB"
      mem64tb: "memory = 64.TB"
      mem128tb: "memory = 128.TB"
      mem256tb: "memory = 256.TB"
      mem512tb: "memory = 512.TB"
      cpu1: "cpus = 1"
      cpu2: "cpus = 2"
      cpu5: "cpus = 5"
      cpu10: "cpus = 10"
      cpu20: "cpus = 20"
      cpu50: "cpus = 50"
      cpu100: "cpus = 100"
      cpu200: "cpus = 200"
      cpu500: "cpus = 500"
      cpu1000: "cpus = 1000"
    script:
    - "includeConfig(\"nextflow_labels.config\")"
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openpipeline/openpipeline/src/query/cellxgene_census/config.vsh.yaml"
  platform: "nextflow"
  output: "/home/runner/work/openpipeline/openpipeline/target/nextflow/query/cellxgene_census"
  executable: "/home/runner/work/openpipeline/openpipeline/target/nextflow/query/cellxgene_census/cellxgene_census"
  viash_version: "0.8.5"
  git_commit: "13101b1da426121b1e904d65e330d7f2389bffd5"
  git_remote: "https://github.com/openpipelines-bio/openpipeline"
