{
"$schema": "http://json-schema.org/draft-07/schema",
"title": "split_samples",
"description": "Split the samples from a single .h5mu multimodal sample into seperate .h5mu files based on the values of a var column. \n",
"type": "object",
"definitions": {

    
    "Dataset input": {
        "title": "Dataset input",
        "type": "object",
        "description": "Dataset input using nf-tower \"dataset\" or \"data explorer\". Allows for the input of multiple         parameter sets to initialise a Nextflow channel.",
        "properties": {
            "param_list": {
                "description": "Dataset input can either be a list of maps, a csv file, a json file, a yaml file, or simply a yaml                 blob. The names of the input fields (e.g. csv columns, json keys) need to be an exact match with the workflow input parameters.",
                "default": "",
                "format": "file-path",
                "mimetype": "text/csv",
                "pattern": "^\\S+\\.csv$"
            }
        }
    },

    
    
    "arguments" : {
    "title": "Arguments",
    "type": "object",
    "description": "No description",
    "properties": {
    
        
                "input": {
                "type":
                "string",
                "description": "Type: `file`, required. Path to a single ",
                "help_text": "Type: `file`, required. Path to a single .h5mu file."
            
            }
    

        ,
                "modality": {
                "type":
                "string",
                "description": "Type: `string`, default: `rna`. ",
                "help_text": "Type: `string`, default: `rna`. "
            ,
                "default": "rna"
            }
    

        ,
                "output": {
                "type":
                "string",
                "description": "Type: `file`, required, default: `$id.$key.output.output`, example: `/path/to/output`. Output directory containing multiple h5mu files",
                "help_text": "Type: `file`, required, default: `$id.$key.output.output`, example: `/path/to/output`. Output directory containing multiple h5mu files."
            ,
                "default": "$id.$key.output.output"
            }
    

        ,
                "obs_feature": {
                "type":
                "string",
                "description": "Type: `string`, required, example: `celltype`. The obs column to split the samples on",
                "help_text": "Type: `string`, required, example: `celltype`. The obs column to split the samples on."
            
            }
    

        ,
                "drop_obs_nan": {
                "type":
                "boolean",
                "description": "Type: `boolean_true`, default: `false`. whether to drop all ",
                "help_text": "Type: `boolean_true`, default: `false`. whether to drop all .obs columns that contain only nan values after splitting."
            ,
                "default": "False"
            }
    

        ,
                "output_compression": {
                "type":
                "string",
                "description": "Type: `string`, example: `gzip`, choices: ``gzip`, `lzf``. The compression format to be used on the output h5mu object",
                "help_text": "Type: `string`, example: `gzip`, choices: ``gzip`, `lzf``. The compression format to be used on the output h5mu object.",
                "enum": ["gzip", "lzf"]
            
            
            }
    

        ,
                "output_files": {
                "type":
                "string",
                "description": "Type: `file`, required, default: `$id.$key.output_files.csv`, example: `sample_files.csv`. A csv containing the base filename and modality type per output file",
                "help_text": "Type: `file`, required, default: `$id.$key.output_files.csv`, example: `sample_files.csv`. A csv containing the base filename and modality type per output file."
            ,
                "default": "$id.$key.output_files.csv"
            }
    

}
},
    
    
    "nextflow input-output arguments" : {
    "title": "Nextflow input-output arguments",
    "type": "object",
    "description": "Input/output parameters for Nextflow itself. Please note that both publishDir and publish_dir are supported but at least one has to be configured.",
    "properties": {
    
        
                "publish_dir": {
                "type":
                "string",
                "description": "Type: `string`, required, example: `output/`. Path to an output directory",
                "help_text": "Type: `string`, required, example: `output/`. Path to an output directory."
            
            }
    

        

}
}
},
"allOf": [

    {
    "$ref": "#/definitions/arguments"
    },

    {
    "$ref": "#/definitions/nextflow input-output arguments"
    }
]
}
