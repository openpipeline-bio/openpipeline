functionality:
  name: "build_bdrhap_reference"
  namespace: "reference"
  version: "main_build"
  authors:
  - name: "Robrecht Cannoodt"
    roles:
    - "author"
    - "maintainer"
    info:
      role: "Core Team Member"
      links:
        email: "robrecht@data-intuitive.com"
        github: "rcannood"
        orcid: "0000-0003-3641-729X"
        linkedin: "robrechtcannoodt"
      organizations:
      - name: "Data Intuitive"
        href: "https://www.data-intuitive.com"
        role: "Data Science Engineer"
      - name: "Open Problems"
        href: "https://openproblems.bio"
        role: "Core Member"
  - name: "Weiwei Schultz"
    roles:
    - "contributor"
    info:
      role: "Contributor"
      organizations:
      - name: "Janssen R&D US"
        role: "Associate Director Data Sciences"
  argument_groups:
  - name: "Inputs"
    arguments:
    - type: "file"
      name: "--genome_fasta"
      description: "Reference genome file in FASTA or FASTA.GZ format. The BD Rhapsody\
        \ Sequencing Analysis Pipeline uses GRCh38 for Human and GRCm39 for Mouse."
      info:
        config_key: "Genome_fasta"
      example:
      - "genome_sequence.fa.gz"
      must_exist: true
      create_parent: true
      required: true
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "file"
      name: "--gtf"
      description: "File path to the transcript annotation files in GTF or GTF.GZ\
        \ format. The Sequence Analysis Pipeline requires the 'gene_name' or \n'gene_id'\
        \ attribute to be set on each gene and exon feature. Gene and exon feature\
        \ lines must have the same attribute, and exons\nmust have a corresponding\
        \ gene with the same value. For TCR/BCR assays, the TCR or BCR gene segments\
        \ must have the 'gene_type' or\n'gene_biotype' attribute set, and the value\
        \ should begin with 'TR' or 'IG', respectively.\n"
      info:
        config_key: "Gtf"
      example:
      - "transcriptome_annotation.gtf.gz"
      must_exist: true
      create_parent: true
      required: true
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "file"
      name: "--extra_sequences"
      description: "File path to additional sequences in FASTA format to use when\
        \ building the STAR index. (e.g. transgenes or CRISPR guide barcodes).\nGTF\
        \ lines for these sequences will be automatically generated and combined with\
        \ the main GTF.\n"
      info:
        config_key: "Extra_sequences"
      must_exist: true
      create_parent: true
      required: false
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
  - name: "Outputs"
    arguments:
    - type: "file"
      name: "--reference_archive"
      description: "A Compressed archive containing the Reference Genome Index and\
        \ annotation GTF files. This archive is meant to be used as an\ninput in the\
        \ BD Rhapsody Sequencing Analysis Pipeline.\n"
      info: null
      example:
      - "reference.tar.gz"
      must_exist: true
      create_parent: true
      required: true
      direction: "output"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Arguments"
    arguments:
    - type: "string"
      name: "--mitochondrial_contigs"
      description: "Names of the Mitochondrial contigs in the provided Reference Genome.\
        \ Fragments originating from contigs other than these are\nidentified as 'nuclear\
        \ fragments' in the ATACseq analysis pipeline.\n"
      info:
        config_key: "Mitochondrial_contigs"
      default:
      - "chrM"
      - "chrMT"
      - "M"
      - "MT"
      required: false
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "boolean_true"
      name: "--filtering_off"
      description: "By default the input Transcript Annotation files are filtered\
        \ based on the gene_type/gene_biotype attribute. Only features \nhaving the\
        \ following attribute values are kept:\n\n  - protein_coding\n  - lncRNA \n\
        \  - IG_LV_gene\n  - IG_V_gene\n  - IG_V_pseudogene\n  - IG_D_gene\n  - IG_J_gene\n\
        \  - IG_J_pseudogene\n  - IG_C_gene\n  - IG_C_pseudogene\n  - TR_V_gene\n\
        \  - TR_V_pseudogene\n  - TR_D_gene\n  - TR_J_gene\n  - TR_J_pseudogene\n\
        \  - TR_C_gene\n\n  If you have already pre-filtered the input Annotation\
        \ files and/or wish to turn-off the filtering, please set this option to True.\n"
      info:
        config_key: "Filtering_off"
      direction: "input"
      dest: "par"
    - type: "boolean_true"
      name: "--wta_only_index"
      description: "Build a WTA only index, otherwise builds a WTA + ATAC index."
      info:
        config_key: "Wta_Only"
      direction: "input"
      dest: "par"
    - type: "string"
      name: "--extra_star_params"
      description: "Additional parameters to pass to STAR when building the genome\
        \ index. Specify exactly like how you would on the command line."
      info:
        config_key: "Extra_STAR_params"
      example:
      - "--limitGenomeGenerateRAM 48000 --genomeSAindexNbases 11"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  resources:
  - type: "python_script"
    path: "script.py"
    is_executable: true
  - type: "file"
    path: "make_rhap_reference_2.2.1_nodocker.cwl"
  - type: "file"
    path: "./src/workflows/utils/labels.config"
    dest: "nextflow_labels.config"
  description: "The Reference Files Generator creates an archive containing Genome\
    \ Index\nand Transcriptome annotation files needed for the BD Rhapsody Sequencing\n\
    Analysis Pipeline. The app takes as input one or more FASTA and GTF files\nand\
    \ produces a compressed archive in the form of a tar.gz file. The \narchive contains:\n\
    \n- STAR index\n- Filtered GTF file\n"
  test_resources:
  - type: "bash_script"
    path: "run_test.sh"
    is_executable: true
  - type: "file"
    path: "resources_test/reference_gencodev41_chr1/reference.fa.gz"
  - type: "file"
    path: "resources_test/reference_gencodev41_chr1/reference.gtf.gz"
  - type: "file"
    path: "src/base/openpipelinetestutils"
    dest: "openpipelinetestutils"
  info: null
  status: "enabled"
  requirements:
    commands:
    - "ps"
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "bdgenomics/rhapsody:2.2.1"
  target_organization: "openpipelines-bio"
  target_registry: "ghcr.io"
  target_tag: "main_build"
  namespace_separator: "/"
  resolve_volume: "Automatic"
  chown: true
  setup_strategy: "ifneedbepullelsecachedbuild"
  target_image_source: "https://github.com/openpipelines-bio/openpipeline"
  setup:
  - type: "apt"
    packages:
    - "procps"
    - "seqkit"
    interactive: false
  - type: "python"
    user: false
    packages:
    - "cwlref-runner"
    - "cwl-runner"
    upgrade: true
  entrypoint: []
  cmd: null
- type: "nextflow"
  id: "nextflow"
  directives:
    label:
    - "highmem"
    - "highcpu"
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: false
    transcript: false
    publish: false
  config:
    labels:
      mem1gb: "memory = 1.GB"
      mem2gb: "memory = 2.GB"
      mem4gb: "memory = 4.GB"
      mem8gb: "memory = 8.GB"
      mem16gb: "memory = 16.GB"
      mem32gb: "memory = 32.GB"
      mem64gb: "memory = 64.GB"
      mem128gb: "memory = 128.GB"
      mem256gb: "memory = 256.GB"
      mem512gb: "memory = 512.GB"
      mem1tb: "memory = 1.TB"
      mem2tb: "memory = 2.TB"
      mem4tb: "memory = 4.TB"
      mem8tb: "memory = 8.TB"
      mem16tb: "memory = 16.TB"
      mem32tb: "memory = 32.TB"
      mem64tb: "memory = 64.TB"
      mem128tb: "memory = 128.TB"
      mem256tb: "memory = 256.TB"
      mem512tb: "memory = 512.TB"
      cpu1: "cpus = 1"
      cpu2: "cpus = 2"
      cpu5: "cpus = 5"
      cpu10: "cpus = 10"
      cpu20: "cpus = 20"
      cpu50: "cpus = 50"
      cpu100: "cpus = 100"
      cpu200: "cpus = 200"
      cpu500: "cpus = 500"
      cpu1000: "cpus = 1000"
    script:
    - "includeConfig(\"nextflow_labels.config\")"
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openpipeline/openpipeline/src/reference/build_bdrhap_reference/config.vsh.yaml"
  platform: "nextflow"
  output: "/home/runner/work/openpipeline/openpipeline/target/nextflow/reference/build_bdrhap_reference"
  executable: "/home/runner/work/openpipeline/openpipeline/target/nextflow/reference/build_bdrhap_reference/build_bdrhap_reference"
  viash_version: "0.8.6"
  git_commit: "701a8375418dfe0819302517756d3706c4305b52"
  git_remote: "https://github.com/openpipelines-bio/openpipeline"
