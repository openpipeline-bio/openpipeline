name: "bd_rhapsody"
namespace: "mapping"
version: "integration_build"
authors:
- name: "Robrecht Cannoodt"
  roles:
  - "maintainer"
  info:
    role: "Core Team Member"
    links:
      email: "robrecht@data-intuitive.com"
      github: "rcannood"
      orcid: "0000-0003-3641-729X"
      linkedin: "robrechtcannoodt"
    organizations:
    - name: "Data Intuitive"
      href: "https://www.data-intuitive.com"
      role: "Data Science Engineer"
    - name: "Open Problems"
      href: "https://openproblems.bio"
      role: "Core Member"
argument_groups:
- name: "Inputs"
  arguments:
  - type: "string"
    name: "--mode"
    description: "Whether to run a whole transcriptome analysis (WTA) or a targeted\
      \ analysis."
    info: null
    example:
    - "wta"
    required: true
    choices:
    - "wta"
    - "targeted"
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "file"
    name: "--input"
    alternatives:
    - "-i"
    description: "Path to your read files in the FASTQ.GZ format. You may specify\
      \ as many R1/R2 read pairs as you want."
    info: null
    example:
    - "input.fastq.gz"
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: true
    multiple_sep: ";"
  - type: "file"
    name: "--reference"
    alternatives:
    - "-r"
    - "--reference_genome"
    description: "Refence to map to. For `--mode wta`, this is the path to STAR index\
      \ as a tar.gz file. For `--mode targeted`, this is the path to mRNA reference\
      \ file for pre-designed, supplemental, or custom panel, in FASTA format"
    info: null
    example:
    - "reference_genome.tar.gz|reference.fasta"
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: true
    multiple_sep: ";"
  - type: "file"
    name: "--transcriptome_annotation"
    alternatives:
    - "-t"
    description: "Path to GTF annotation file (only for `--mode wta`)."
    info: null
    example:
    - "transcriptome.gtf"
    must_exist: true
    create_parent: true
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "file"
    name: "--abseq_reference"
    alternatives:
    - "-a"
    description: "Path to the AbSeq reference file in FASTA format. Only needed if\
      \ BD AbSeq Ab-Oligos are used."
    info: null
    example:
    - "abseq_reference.fasta"
    must_exist: true
    create_parent: true
    required: false
    direction: "input"
    multiple: true
    multiple_sep: ";"
  - type: "file"
    name: "--supplemental_reference"
    alternatives:
    - "-s"
    description: "Path to the supplemental reference file in FASTA format. Only needed\
      \ if there are additional transgene sequences used in the experiment (only for\
      \ `--mode wta`)."
    info: null
    example:
    - "supplemental_reference.fasta"
    must_exist: true
    create_parent: true
    required: false
    direction: "input"
    multiple: true
    multiple_sep: ";"
  - type: "string"
    name: "--sample_prefix"
    description: "Specify a run name to use as the output file base name. Use only\
      \ letters, numbers, or hyphens. Do not use special characters or spaces."
    info: null
    default:
    - "sample"
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
- name: "Outputs"
  arguments:
  - type: "file"
    name: "--output"
    alternatives:
    - "-o"
    description: "Output folder. Output still needs to be processed further."
    info: null
    example:
    - "output_dir"
    must_exist: true
    create_parent: true
    required: true
    direction: "output"
    multiple: false
    multiple_sep: ";"
- name: "Putative cell calling settings"
  arguments:
  - type: "string"
    name: "--putative_cell_call"
    description: "Specify the dataset to be used for putative cell calling. For putative\
      \ cell calling using an AbSeq dataset, please provide an AbSeq_Reference fasta\
      \ file above."
    info: null
    example:
    - "mRNA"
    required: false
    choices:
    - "mRNA"
    - "AbSeq_Experimental"
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "integer"
    name: "--exact_cell_count"
    description: "Exact cell count - Set a specific number (>=1) of cells as putative,\
      \ based on those with the highest error-corrected read count"
    info: null
    example:
    - 10000
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "boolean_true"
    name: "--disable_putative_calling"
    description: "Disable Refined Putative Cell Calling - Determine putative cells\
      \ using only the basic algorithm (minimum second derivative along the cumulative\
      \ reads curve). The refined algorithm attempts to remove false positives and\
      \ recover false negatives, but may not be ideal for certain complex mixtures\
      \ of cell types. Does not apply if Exact Cell Count is set."
    info: null
    direction: "input"
- name: "Subsample arguments"
  arguments:
  - type: "double"
    name: "--subsample"
    description: "A number >1 or fraction (0 < n < 1) to indicate the number or percentage\
      \ of reads to subsample."
    info: null
    example:
    - 0.01
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "integer"
    name: "--subsample_seed"
    description: "A seed for replicating a previous subsampled run."
    info: null
    example:
    - 3445
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
- name: "Multiplex arguments"
  arguments:
  - type: "string"
    name: "--sample_tags_version"
    description: "Specify if multiplexed run."
    info: null
    example:
    - "human"
    required: false
    choices:
    - "human"
    - "hs"
    - "mouse"
    - "mm"
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--tag_names"
    description: "Tag_Names (optional) - Specify the tag number followed by '-' and\
      \ the desired sample name to appear in Sample_Tag_Metrics.csv.\nDo not use the\
      \ special characters: &, (), [], {},  <>, ?, |\n"
    info: null
    example:
    - "4-mySample"
    - "9-myOtherSample"
    - "6-alsoThisSample"
    required: false
    direction: "input"
    multiple: true
    multiple_sep: ";"
- name: "VDJ arguments"
  arguments:
  - type: "string"
    name: "--vdj_version"
    description: "Specify if VDJ run."
    info: null
    example:
    - "human"
    required: false
    choices:
    - "human"
    - "mouse"
    - "humanBCR"
    - "humanBCR"
    - "humanTCR"
    - "mouseBCR"
    direction: "input"
    multiple: false
    multiple_sep: ";"
- name: "CWL-runner arguments"
  arguments:
  - type: "boolean"
    name: "--parallel"
    description: "Run jobs in parallel."
    info: null
    default:
    - true
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "boolean_true"
    name: "--timestamps"
    description: "Add timestamps to the errors, warnings, and notifications."
    info: null
    direction: "input"
  - type: "boolean_true"
    name: "--dryrun"
    description: "If true, the output directory will only contain the CWL input files,\
      \ but the pipeline itself will not be executed."
    info: null
    direction: "input"
resources:
- type: "python_script"
  path: "script.py"
  is_executable: true
- type: "file"
  path: "rhapsody_wta_1.10.1_nodocker.cwl"
- type: "file"
  path: "rhapsody_targeted_1.10.1_nodocker.cwl"
- type: "file"
  path: "setup_logger.py"
- type: "file"
  path: "nextflow_labels.config"
  dest: "nextflow_labels.config"
description: "A wrapper for the BD Rhapsody Analysis CWL v1.10.1 pipeline.\n\nThe\
  \ CWL pipeline file is obtained by cloning 'https://bitbucket.org/CRSwDev/cwl/src/master/'\
  \ and removing all objects with class 'DockerRequirement' from the YML.\n\nThis\
  \ pipeline can be used for a targeted analysis (with `--mode targeted`) or for a\
  \ whole transcriptome analysis (with `--mode wta`).\n\n* If mode is `\"targeted\"\
  `, then either the `--reference` or `--abseq_reference` parameters must be defined.\n\
  * If mode is `\"wta\"`, then `--reference` and `--transcriptome_annotation` must\
  \ be defined, `--abseq_reference` and `--supplemental_reference` is optional.\n\n\
  The reference_genome and transcriptome_annotation files can be generated with the\
  \ make_reference pipeline.\nAlternatively, BD also provides standard references\
  \ which can be downloaded from these locations:\n\n  - Human: http://bd-rhapsody-public.s3-website-us-east-1.amazonaws.com/Rhapsody-WTA/GRCh38-PhiX-gencodev29/\n\
  \  - Mouse: http://bd-rhapsody-public.s3-website-us-east-1.amazonaws.com/Rhapsody-WTA/GRCm38-PhiX-gencodevM19/\n"
test_resources:
- type: "bash_script"
  path: "test_memory.sh"
  is_executable: true
- type: "bash_script"
  path: "test_wta.sh"
  is_executable: true
- type: "bash_script"
  path: "test_targeted.sh"
  is_executable: true
- type: "file"
  path: "bdrhap_vdj"
- type: "file"
  path: "bdrhap_5kjrt"
- type: "file"
  path: "reference_gencodev41_chr1"
- type: "file"
  path: "openpipelinetestutils"
  dest: "openpipelinetestutils"
info:
  name: "BD Rhapsody"
  short_description: "A wrapper for the BD Rhapsody Analysis CWL v1.10.1 pipeline"
status: "enabled"
links:
  repository: "https://github.com/openpipelines-bio/openpipeline"
  docker_registry: "ghcr.io"
runners:
- type: "executable"
  id: "executable"
  docker_setup_strategy: "ifneedbepullelsecachedbuild"
- type: "nextflow"
  id: "nextflow"
  directives:
    label:
    - "highmem"
    - "highcpu"
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: false
    transcript: false
    publish: false
  config:
    labels:
      mem1gb: "memory = 1000000000.B"
      mem2gb: "memory = 2000000000.B"
      mem5gb: "memory = 5000000000.B"
      mem10gb: "memory = 10000000000.B"
      mem20gb: "memory = 20000000000.B"
      mem50gb: "memory = 50000000000.B"
      mem100gb: "memory = 100000000000.B"
      mem200gb: "memory = 200000000000.B"
      mem500gb: "memory = 500000000000.B"
      mem1tb: "memory = 1000000000000.B"
      mem2tb: "memory = 2000000000000.B"
      mem5tb: "memory = 5000000000000.B"
      mem10tb: "memory = 10000000000000.B"
      mem20tb: "memory = 20000000000000.B"
      mem50tb: "memory = 50000000000000.B"
      mem100tb: "memory = 100000000000000.B"
      mem200tb: "memory = 200000000000000.B"
      mem500tb: "memory = 500000000000000.B"
      mem1gib: "memory = 1073741824.B"
      mem2gib: "memory = 2147483648.B"
      mem4gib: "memory = 4294967296.B"
      mem8gib: "memory = 8589934592.B"
      mem16gib: "memory = 17179869184.B"
      mem32gib: "memory = 34359738368.B"
      mem64gib: "memory = 68719476736.B"
      mem128gib: "memory = 137438953472.B"
      mem256gib: "memory = 274877906944.B"
      mem512gib: "memory = 549755813888.B"
      mem1tib: "memory = 1099511627776.B"
      mem2tib: "memory = 2199023255552.B"
      mem4tib: "memory = 4398046511104.B"
      mem8tib: "memory = 8796093022208.B"
      mem16tib: "memory = 17592186044416.B"
      mem32tib: "memory = 35184372088832.B"
      mem64tib: "memory = 70368744177664.B"
      mem128tib: "memory = 140737488355328.B"
      mem256tib: "memory = 281474976710656.B"
      mem512tib: "memory = 562949953421312.B"
      cpu1: "cpus = 1"
      cpu2: "cpus = 2"
      cpu5: "cpus = 5"
      cpu10: "cpus = 10"
      cpu20: "cpus = 20"
      cpu50: "cpus = 50"
      cpu100: "cpus = 100"
      cpu200: "cpus = 200"
      cpu500: "cpus = 500"
      cpu1000: "cpus = 1000"
    script:
    - "includeConfig(\"nextflow_labels.config\")"
  debug: false
  container: "docker"
engines:
- type: "docker"
  id: "docker"
  image: "ghcr.io/data-intuitive/bd_rhapsody:1.10.1"
  target_tag: "integration_build"
  namespace_separator: "/"
  setup:
  - type: "python"
    user: false
    packages:
    - "pandas<2"
    upgrade: true
  entrypoint: []
  cmd: null
build_info:
  config: "src/mapping/bd_rhapsody/config.vsh.yaml"
  runner: "nextflow"
  engine: "docker"
  output: "target/nextflow/mapping/bd_rhapsody"
  executable: "target/nextflow/mapping/bd_rhapsody/main.nf"
  viash_version: "0.9.0-RC6"
  git_commit: "e9d97e44b7a69cb357a1dcdefeb3bf3e79a0d9a0"
  git_remote: "https://github.com/openpipelines-bio/openpipeline"
package_config:
  version: "dev"
  info: null
  viash_version: "0.9.0-RC6"
  source: "src"
  target: "target"
  config_mods:
  - ".test_resources += {path: '/src/base/openpipelinetestutils', dest: 'openpipelinetestutils'}\n\
    .resources += {path: '/src/workflows/utils/labels.config', dest: 'nextflow_labels.config'}\n\
    .runners[.type == 'nextflow'].directives.tag := '$id'\n.runners[.type == 'nextflow'].config.script\
    \ := 'includeConfig(\"nextflow_labels.config\")'"
  - ".version := \"integration_build\""
  - ".engines[.type == 'docker'].target_tag := 'integration_build'"
  organization: "openpipelines-bio"
  links:
    repository: "https://github.com/openpipelines-bio/openpipeline"
    docker_registry: "ghcr.io"
    homepage: "https://openpipelines.bio"
    documentation: "https://openpipelines.bio/fundamentals"
    issue_tracker: "https://github.com/openpipelines-bio/openpipeline/issues"
