functionality:
  name: "pynndescent_knn"
  namespace: "labels_transfer"
  version: "annotation-workflow_build"
  authors:
  - name: "Dorien Roosen"
    roles:
    - "maintainer"
    - "author"
    info:
      role: "Contributor"
      links:
        email: "dorien@data-intuitive.com"
        github: "dorien-er"
        linkedin: "dorien-roosen"
      organizations:
      - name: "Data Intuitive"
        href: "https://www.data-intuitive.com"
        role: "Data Scientist"
  argument_groups:
  - name: "Input files"
    arguments:
    - type: "file"
      name: "--input"
      description: "The query data to transfer the labels to. Should be a .h5mu file."
      info: null
      example:
      - "input.h5mu"
      must_exist: true
      create_parent: true
      required: true
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--modality"
      description: "Which modality to use."
      info: null
      default:
      - "rna"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--input_obsm_features"
      description: "The `.obsm` key of the embedding to use for the classifier's inference.\n\
        Make sure that embedding was obtained in the same way as the reference embedding\
        \ (e.g. by the same model, preprocessing and/or integration).\n"
      info: null
      example:
      - "X_scvi"
      required: true
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Reference dataset arguments"
    arguments:
    - type: "file"
      name: "--reference"
      description: "Should be an h5mu file."
      info: null
      example:
      - "reference.h5mu"
      must_exist: true
      create_parent: true
      required: true
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--reference_obsm_features"
      description: "The `.obsm` key of the embedding to use for the classifier's training.\n\
        Make sure that embedding was obtained in the same way as the query embedding\
        \ (e.g. by the same model or preprocessing).\n"
      info: null
      example:
      - "X_scvi"
      required: true
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--reference_obs_targets"
      description: "The `.obs` key(s) of the target labels to tranfer."
      info: null
      example:
      - "ann_level_1"
      - "ann_level_2"
      - "ann_level_3"
      - "ann_level_4"
      - "ann_level_5"
      - "ann_finest_level"
      required: true
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
  - name: "KNN label transfer arguments"
    arguments:
    - type: "string"
      name: "--weights"
      description: "Weight function used in prediction. Possible values are:\n`uniform`\
        \ (all points in each neighborhood are weighted equally) or \n`distance` (weight\
        \ points by the inverse of their distance)\n"
      info: null
      default:
      - "uniform"
      required: false
      choices:
      - "uniform"
      - "distance"
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--n_neighbors"
      description: "The number of neighbors to use in k-neighbor graph structure used\
        \ for fast approximate nearest neighbor search with PyNNDescent. \nLarger\
        \ values will result in more accurate search results at the cost of computation\
        \ time.\n"
      info: null
      default:
      - 15
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Outputs"
    arguments:
    - type: "file"
      name: "--output"
      description: "The query data in .h5mu format with predicted labels transfered\
        \ from the reference."
      info: null
      must_exist: true
      create_parent: true
      required: true
      direction: "output"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--output_obs_predictions"
      description: "In which `.obs` slots to store the predicted information.\nIf\
        \ provided, must have the same length as `--reference_obs_targets`.\nIf empty,\
        \ will default to the `reference_obs_targets` combined with the `\"_pred\"\
        ` suffix.\n"
      info: null
      required: false
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "string"
      name: "--output_obs_probability"
      description: "In which `.obs` slots to store the probability of the predictions.\n\
        If provided, must have the same length as `--reference_obs_targets`.\nIf empty,\
        \ will default to the `reference_obs_targets` combined with the `\"_probability\"\
        ` suffix.\n"
      info: null
      required: false
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "string"
      name: "--output_uns_parameters"
      description: "The `.uns` key to store additional information about the parameters\
        \ used for the label transfer.\n"
      info: null
      default:
      - "labels_transfer"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--output_compression"
      description: "The compression format to be used on the output h5mu object.\n"
      info: null
      example:
      - "gzip"
      required: false
      choices:
      - "gzip"
      - "lzf"
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  resources:
  - type: "python_script"
    path: "script.py"
    is_executable: true
  - type: "file"
    path: "./src/workflows/utils/labels.config"
    dest: "nextflow_labels.config"
  description: "This component generates a neighborhood graph based using the PyNNDescentTransformer,\
    \ followed by classification using a k-nearest neighborhood vote.\n"
  test_resources:
  - type: "file"
    path: "src/base/openpipelinetestutils"
    dest: "openpipelinetestutils"
  info: null
  status: "enabled"
  requirements:
    commands:
    - "ps"
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "python:3.12"
  target_organization: "openpipelines-bio"
  target_registry: "ghcr.io"
  target_tag: "annotation-workflow_build"
  namespace_separator: "/"
  resolve_volume: "Automatic"
  chown: true
  setup_strategy: "ifneedbepullelsecachedbuild"
  target_image_source: "https://github.com/openpipelines-bio/openpipeline"
  setup:
  - type: "apt"
    packages:
    - "procps"
    - "pkg-config"
    - "libhdf5-dev"
    interactive: false
  - type: "python"
    user: false
    packages:
    - "anndata~=0.9.1"
    - "mudata~=0.2.3"
    - "pandas!=2.1.2"
    upgrade: true
  entrypoint: []
  cmd: null
- type: "native"
  id: "native"
- type: "nextflow"
  id: "nextflow"
  directives:
    label:
    - "singlecpu"
    - "lowmem"
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: false
    transcript: false
    publish: false
  config:
    labels:
      mem1gb: "memory = 1.GB"
      mem2gb: "memory = 2.GB"
      mem4gb: "memory = 4.GB"
      mem8gb: "memory = 8.GB"
      mem16gb: "memory = 16.GB"
      mem32gb: "memory = 32.GB"
      mem64gb: "memory = 64.GB"
      mem128gb: "memory = 128.GB"
      mem256gb: "memory = 256.GB"
      mem512gb: "memory = 512.GB"
      mem1tb: "memory = 1.TB"
      mem2tb: "memory = 2.TB"
      mem4tb: "memory = 4.TB"
      mem8tb: "memory = 8.TB"
      mem16tb: "memory = 16.TB"
      mem32tb: "memory = 32.TB"
      mem64tb: "memory = 64.TB"
      mem128tb: "memory = 128.TB"
      mem256tb: "memory = 256.TB"
      mem512tb: "memory = 512.TB"
      cpu1: "cpus = 1"
      cpu2: "cpus = 2"
      cpu5: "cpus = 5"
      cpu10: "cpus = 10"
      cpu20: "cpus = 20"
      cpu50: "cpus = 50"
      cpu100: "cpus = 100"
      cpu200: "cpus = 200"
      cpu500: "cpus = 500"
      cpu1000: "cpus = 1000"
    script:
    - "includeConfig(\"nextflow_labels.config\")"
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openpipeline/openpipeline/src/labels_transfer/pynndescent_knn/config.vsh.yaml"
  platform: "nextflow"
  output: "/home/runner/work/openpipeline/openpipeline/target/nextflow/labels_transfer/pynndescent_knn"
  executable: "/home/runner/work/openpipeline/openpipeline/target/nextflow/labels_transfer/pynndescent_knn/pynndescent_knn"
  viash_version: "0.8.5"
  git_commit: "91994703f607b924175756004a7b4f779537badd"
  git_remote: "https://github.com/openpipelines-bio/openpipeline"
  git_tag: "0.2.0-1624-g91994703f6"
