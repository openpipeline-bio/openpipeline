# Outputs
# output: "$id.$key.output.h5mu"

# Query input
id: # please fill in - example: "foo"
input: # please fill in - example: ["input.h5mu"]

# Query input specifications
# query_rna_layer: "foo"
# var_query_gene_names: "foo"
# obs_query_batch: "foo"

# Reference input
reference: # please fill in - example: "https://zenodo.org/records/7587774/files/TS_Lung_filtered.h5ad"

# Reference input specifications
obs_reference_batch: # please fill in - example: "foo"
# reference_rna_layer: "foo"
obs_reference_targets: # please fill in - example: ["ann_level_1", "ann_level_2", "ann_level_3", "ann_level_4", "ann_level_5", "ann_finest_level"]

# Annotation methods
annotation_methods: # please fill in - example: ["harmony_knn"]

# scGPT model input
model: # please fill in - example: "best_model.pt"
model_config: # please fill in - example: "args.json"
model_vocab: # please fill in - example: "vocab.json"
finetuned_checkpoints_key: "model_state_dict"
label_mapper_key: "id_to_class"

# Pre-processing options: RNA filtering
# rna_min_counts: 200
# rna_max_counts: 5000000
# rna_min_genes_per_cell: 200
# rna_max_genes_per_cell: 1500000
# rna_min_cells_per_gene: 3
# rna_min_fraction_mito: 0
# rna_max_fraction_mito: 0.2

# Pre-processing options: Highly variable features detection
highly_variable_features_var_output: "filter_with_hvg"
highly_variable_features_obs_batch_key: "sample_id"

# Pre-processing options: Mitochondrial Gene Detection
# var_name_mitochondrial_genes: "foo"
# obs_name_mitochondrial_fraction: "foo"
# var_gene_names: "gene_symbol"
mitochondrial_gene_regex: "^[mM][tT]-"

# Pre-processing options: QC metrics calculation options
# var_qc_metrics: ["ercc", "highly_variable"]
top_n_vars: [50, 100, 200, 500]

# Harmony integration options
theta: [2]

# KNN label transfer options
weights: "uniform"
n_neighbors: 15

# scGPT annotation options
pad_token: "<pad>"
pad_value: -2
n_hvg: 1200
dsbn: true
batch_size: 64
n_input_bins: 51
# seed: 123

# Nextflow input-output arguments
publish_dir: # please fill in - example: "output/"
# param_list: "my_params.yaml"
