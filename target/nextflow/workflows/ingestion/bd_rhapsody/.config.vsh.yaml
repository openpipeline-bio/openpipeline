functionality:
  name: "bd_rhapsody"
  namespace: "workflows/ingestion"
  version: "main_build"
  authors:
  - name: "Robrecht Cannoodt"
    roles:
    - "maintainer"
    info:
      role: "Core Team Member"
      links:
        email: "robrecht@data-intuitive.com"
        github: "rcannood"
        orcid: "0000-0003-3641-729X"
        linkedin: "robrechtcannoodt"
      organizations:
      - name: "Data Intuitive"
        href: "https://www.data-intuitive.com"
        role: "Data Science Engineer"
      - name: "Open Problems"
        href: "https://openproblems.bio"
        role: "Core Member"
  - name: "Dorien Roosen"
    roles:
    - "author"
    info:
      role: "Contributor"
      links:
        email: "dorien@data-intuitive.com"
        github: "dorien-er"
        linkedin: "dorien-roosen"
      organizations:
      - name: "Data Intuitive"
        href: "https://www.data-intuitive.com"
        role: "Data Scientist"
  argument_groups:
  - name: "Inputs"
    arguments:
    - type: "file"
      name: "--reads"
      description: "Reads (optional) - Path to your FASTQ.GZ formatted read files\
        \ from libraries that may include:\n\n- WTA mRNA\n- Targeted mRNA\n- AbSeq\n\
        - Sample Multiplexing\n- VDJ\n\nYou may specify as many R1/R2 read pairs as\
        \ you want.\n"
      info:
        config_key: "Reads"
      example:
      - "WTALibrary_S1_L001_R1_001.fastq.gz"
      - "WTALibrary_S1_L001_R2_001.fastq.gz"
      must_exist: true
      create_parent: true
      required: false
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "file"
      name: "--reads_atac"
      description: "Path to your FASTQ.GZ formatted read files from ATAC-Seq libraries.\n\
        You may specify as many R1/R2/I2 files as you want.\n"
      info:
        config_key: "Reads_ATAC"
      example:
      - "ATACLibrary_S2_L001_R1_001.fastq.gz"
      - "ATACLibrary_S2_L001_R2_001.fastq.gz"
      - "ATACLibrary_S2_L001_I2_001.fastq.gz"
      must_exist: true
      create_parent: true
      required: false
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
  - name: "References"
    description: "Assay type will be inferred from the provided reference(s).\nDo\
      \ not provide both reference_archive and targeted_reference at the same time.\n\
      \nValid reference input combinations:\n  - reference_archive: WTA only\n  -\
      \ reference_archive & abseq_reference: WTA + AbSeq\n  - reference_archive &\
      \ supplemental_reference: WTA + extra transgenes\n  - reference_archive & abseq_reference\
      \ & supplemental_reference: WTA + AbSeq + extra transgenes\n  - reference_archive:\
      \ WTA + ATAC or ATAC only\n  - reference_archive & supplemental_reference: WTA\
      \ + ATAC + extra transgenes\n  - targeted_reference: Targeted only\n  - targeted_reference\
      \ & abseq_reference: Targeted + AbSeq\n  - abseq_reference: AbSeq only\n\nThe\
      \ reference_archive can be generated with the `reference/build_bdrhap_reference`\
      \ component.\nAlternatively, BD also provides standard references which can\
      \ be downloaded from these locations:\n\n  - Human: https://bd-rhapsody-public.s3.amazonaws.com/Rhapsody-WTA/Pipeline-version2.x_WTA_references/RhapRef_Human_WTA_2023-02.tar.gz\n\
      \  - Mouse: https://bd-rhapsody-public.s3.amazonaws.com/Rhapsody-WTA/Pipeline-version2.x_WTA_references/RhapRef_Mouse_WTA_2023-02.tar.gz\n"
    arguments:
    - type: "file"
      name: "--reference_archive"
      description: "Path to Rhapsody WTA Reference in the tar.gz format.\n\nStructure\
        \ of the reference archive:\n\n- `BD_Rhapsody_Reference_Files/`: top level\
        \ folder\n  - `star_index/`: sub-folder containing STAR index, that is files\
        \ created with `STAR --runMode genomeGenerate`\n  - GTF for gene-transcript-annotation\
        \ e.g. \"gencode.v43.primary_assembly.annotation.gtf\"\n"
      info:
        config_key: "Reference_Archive"
      example:
      - "RhapRef_Human_WTA_2023-02.tar.gz"
      must_exist: true
      create_parent: true
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "file"
      name: "--targeted_reference"
      description: "Path to the targeted reference file in FASTA format.\n"
      info:
        config_key: "Targeted_Reference"
      example:
      - "BD_Rhapsody_Immune_Response_Panel_Hs.fasta"
      must_exist: true
      create_parent: true
      required: false
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "file"
      name: "--abseq_reference"
      description: "Path to the AbSeq reference file in FASTA format.  Only needed\
        \ if BD AbSeq Ab-Oligos are used."
      info:
        config_key: "AbSeq_Reference"
      example:
      - "AbSeq_reference.fasta"
      must_exist: true
      create_parent: true
      required: false
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "file"
      name: "--supplemental_reference"
      alternatives:
      - "-s"
      description: "Path to the supplemental reference file in FASTA format.  Only\
        \ needed if there are additional transgene sequences to be aligned against\
        \ in a WTA assay experiment."
      info:
        config_key: "Supplemental_Reference"
      example:
      - "supplemental_reference.fasta"
      must_exist: true
      create_parent: true
      required: false
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
  - name: "Outputs"
    description: "Outputs"
    arguments:
    - type: "file"
      name: "--output"
      description: "The processed output file in h5mu format."
      info: null
      example:
      - "output.h5mu"
      must_exist: true
      create_parent: true
      required: true
      direction: "output"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "file"
      name: "--output_raw"
      alternatives:
      - "-o"
      description: "The unprocessed output directory containing all the outputs from\
        \ the pipeline."
      info: null
      example:
      - "output_dir"
      must_exist: true
      create_parent: true
      required: true
      direction: "output"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Putative Cell Calling Settings"
    arguments:
    - type: "string"
      name: "--cell_calling_data"
      description: "Specify the dataset to be used for putative cell calling: mRNA,\
        \ AbSeq, ATAC, mRNA_and_ATAC\n\nFor putative cell calling using an AbSeq dataset,\
        \ please provide an AbSeq_Reference fasta file above.\n\nFor putative cell\
        \ calling using an ATAC dataset, please provide a WTA+ATAC-Seq Reference_Archive\
        \ file above.\n\nThe default data for putative cell calling, will be determined\
        \ the following way:\n\n- If mRNA Reads and ATAC Reads exist: mRNA_and_ATAC\n\
        - If only ATAC Reads exist: ATAC\n- Otherwise: mRNA\n"
      info:
        config_key: "Cell_Calling_Data"
      example:
      - "mRNA"
      required: false
      choices:
      - "mRNA"
      - "AbSeq"
      - "ATAC"
      - "mRNA_and_ATAC"
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--cell_calling_bioproduct_algorithm"
      description: "Specify the bioproduct algorithm to be used for putative cell\
        \ calling: Basic or Refined\n\nBy default, the Basic algorithm will be used\
        \ for putative cell calling.\n"
      info:
        config_key: "Cell_Calling_Bioproduct_Algorithm"
      example:
      - "Basic"
      required: false
      choices:
      - "Basic"
      - "Refined"
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--cell_calling_atac_algorithm"
      description: "Specify the ATAC-seq algorithm to be used for putative cell calling:\
        \ Basic or Refined\n\nBy default, the Basic algorithm will be used for putative\
        \ cell calling.\n"
      info:
        config_key: "Cell_Calling_ATAC_Algorithm"
      example:
      - "Basic"
      required: false
      choices:
      - "Basic"
      - "Refined"
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--exact_cell_count"
      description: "Set a specific number of cells as putative, based on those with\
        \ the highest error-corrected read count\n"
      info:
        config_key: "Exact_Cell_Count"
      example:
      - 10000
      required: false
      min: 1
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--expected_cell_count"
      description: "Guide the basic putative cell calling algorithm by providing an\
        \ estimate of the number of cells expected.  Usually this can be the number\
        \ of cells loaded into the Rhapsody cartridge.  If there are multiple inflection\
        \ points on the second derivative cumulative curve, this will ensure the one\
        \ selected is near the expected. \n"
      info:
        config_key: "Expected_Cell_Count"
      example:
      - 20000
      required: false
      min: 1
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Intronic Reads Settings"
    arguments:
    - type: "boolean"
      name: "--exclude_intronic_reads"
      description: "By default, the flag is false, and reads aligned to exons and\
        \ introns are considered and represented in molecule counts. When the flag\
        \ is set to true, intronic reads will be excluded.\nThe value can be true\
        \ or false.\n"
      info:
        config_key: "Exclude_Intronic_Reads"
      example:
      - false
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Multiplex Settings"
    arguments:
    - type: "string"
      name: "--sample_tags_version"
      description: "Specify the version of the Sample Tags used in the run:\n\n* If\
        \ Sample Tag Multiplexing was done, specify the appropriate version: human,\
        \ mouse, flex, nuclei_includes_mrna, nuclei_atac_only\n* If this is an SMK\
        \ + Nuclei mRNA run or an SMK + Multiomic ATAC-Seq (WTA+ATAC-Seq) run (and\
        \ not an SMK + ATAC-Seq only run), choose the \"nuclei_includes_mrna\" option.\n\
        * If this is an SMK + ATAC-Seq only run (and not SMK + Multiomic ATAC-Seq\
        \ (WTA+ATAC-Seq)), choose the \"nuclei_atac_only\" option.\n"
      info:
        config_key: "Sample_Tags_Version"
      example:
      - "human"
      required: false
      choices:
      - "human"
      - "mouse"
      - "flex"
      - "nuclei_includes_mrna"
      - "nuclei_atac_only"
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--tag_names"
      description: "Specify the tag number followed by '-' and the desired sample\
        \ name to appear in Sample_Tag_Metrics.csv\nDo not use the special characters.\n"
      info:
        config_key: "Tag_Names"
      example:
      - "4-mySample"
      - "9-myOtherSample"
      - "6-alsoThisSample"
      required: false
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
  - name: "VDJ arguments"
    arguments:
    - type: "string"
      name: "--vdj_version"
      description: "If VDJ was done, specify the appropriate option: human, mouse,\
        \ humanBCR, humanTCR, mouseBCR, mouseTCR\n"
      info:
        config_key: "VDJ_Version"
      example:
      - "human"
      required: false
      choices:
      - "human"
      - "mouse"
      - "humanBCR"
      - "humanTCR"
      - "mouseBCR"
      - "mouseTCR"
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "ATAC options"
    arguments:
    - type: "file"
      name: "--predefined_atac_peaks"
      description: "An optional BED file containing pre-established chromatin accessibility\
        \ peak regions for generating the ATAC cell-by-peak matrix."
      info:
        config_key: "Predefined_ATAC_Peaks"
      example:
      - "predefined_peaks.bed"
      must_exist: true
      create_parent: true
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Additional options"
    arguments:
    - type: "string"
      name: "--run_name"
      description: "Specify a run name to use as the output file base name. Use only\
        \ letters, numbers, or hyphens. Do not use special characters or spaces.\n"
      info:
        config_key: "Run_Name"
      default:
      - "sample"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "boolean"
      name: "--generate_bam"
      description: "Specify whether to create the BAM file output\n"
      info:
        config_key: "Generate_Bam"
      default:
      - false
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "boolean"
      name: "--long_reads"
      description: "Use STARlong (default: undefined - i.e. autodetects based on read\
        \ lengths) - Specify if the STARlong aligner should be used instead of STAR.\
        \ Set to true if the reads are longer than 650bp.\n"
      info:
        config_key: "Long_Reads"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Advanced options"
    description: "NOTE: Only change these if you are really sure about what you are\
      \ doing\n"
    arguments:
    - type: "string"
      name: "--custom_star_params"
      description: "Modify STAR alignment parameters - Set this parameter to fully\
        \ override default STAR mapping parameters used in the pipeline.\nFor reference\
        \ this is the default that is used:\n\n  Short Reads: `--outFilterScoreMinOverLread\
        \ 0 --outFilterMatchNminOverLread 0 --outFilterMultimapScoreRange 0 --clip3pAdapterSeq\
        \ AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA --seedSearchStartLmax 50 --outFilterMatchNmin\
        \ 25 --limitOutSJcollapsed 2000000`\n  Long Reads: Same as Short Reads + `--seedPerReadNmax\
        \ 10000`\n\nThis applies to fastqs provided in the Reads user input \nDo NOT\
        \ set any non-mapping related params like `--genomeDir`, `--outSAMtype`, `--outSAMunmapped`,\
        \ `--readFilesIn`, `--runThreadN`, etc.\nWe use STAR version 2.7.10b\n"
      info:
        config_key: "Custom_STAR_Params"
      example:
      - "--alignIntronMax 6000 --outFilterScoreMinOverLread 0.1 --limitOutSJcollapsed\
        \ 2000000"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--custom_bwa_mem2_params"
      description: "Modify bwa-mem2 alignment parameters - Set this parameter to fully\
        \ override bwa-mem2 mapping parameters used in the pipeline\nThe pipeline\
        \ does not specify any custom mapping params to bwa-mem2 so program default\
        \ values are used\nThis applies to fastqs provided in the Reads_ATAC user\
        \ input \nDo NOT set any non-mapping related params like `-C`, `-t`, etc.\n\
        We use bwa-mem2 version 2.2.1\n"
      info:
        config_key: "Custom_bwa_mem2_Params"
      example:
      - "-k 16 -w 200 -r"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "CWL-runner arguments"
    arguments:
    - type: "boolean"
      name: "--parallel"
      description: "Run jobs in parallel."
      info: null
      default:
      - true
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "boolean_true"
      name: "--timestamps"
      description: "Add timestamps to the errors, warnings, and notifications."
      info: null
      direction: "input"
      dest: "par"
  - name: "Undocumented arguments"
    arguments:
    - type: "integer"
      name: "--abseq_umi"
      info:
        config_key: "AbSeq_UMI"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "boolean"
      name: "--target_analysis"
      info:
        config_key: "Target_analysis"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "double"
      name: "--vdj_jgene_evalue"
      description: "e-value threshold for J gene. The e-value threshold for J gene\
        \ call by IgBlast/PyIR, default is set as 0.001\n"
      info:
        config_key: "VDJ_JGene_Evalue"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "double"
      name: "--vdj_vgene_evalue"
      description: "e-value threshold for V gene. The e-value threshold for V gene\
        \ call by IgBlast/PyIR, default is set as 0.001\n"
      info:
        config_key: "VDJ_VGene_Evalue"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "boolean"
      name: "--write_filtered_reads"
      info:
        config_key: "Write_Filtered_Reads"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  resources:
  - type: "nextflow_script"
    path: "main.nf"
    is_executable: true
    entrypoint: "run_wf"
  - type: "file"
    path: "src/workflows/utils/"
  - type: "file"
    path: "./src/workflows/utils/labels.config"
    dest: "nextflow_labels.config"
  description: "BD Rhapsody Sequence Analysis CWL pipeline v2.2.1\n\nThis pipeline\
    \ performs analysis of single-cell multiomic sequence read (FASTQ) data. The supported\n\
    sequencing libraries are those generated by the BD Rhapsody assay kits, including:\
    \ Whole Transcriptome\nmRNA, Targeted mRNA, AbSeq Antibody-Oligonucleotides, Single-Cell\
    \ Multiplexing, TCR/BCR, and\nATAC-Seq\n\nThe CWL pipeline file is obtained by\
    \ cloning 'https://bitbucket.org/CRSwDev/cwl' and removing all objects with class\
    \ 'DockerRequirement' from the YAML.\n"
  test_resources:
  - type: "nextflow_script"
    path: "test.nf"
    is_executable: true
    entrypoint: "test_wf"
  - type: "file"
    path: "resources_test/bdrhap_5kjrt"
  - type: "file"
    path: "resources_test/reference_gencodev41_chr1/"
  - type: "file"
    path: "src/base/openpipelinetestutils"
    dest: "openpipelinetestutils"
  info: null
  status: "enabled"
  requirements:
    commands:
    - "ps"
  dependencies:
  - name: "mapping/bd_rhapsody"
    alias: "bd_rhapsody_component"
    repository:
      type: "local"
      localPath: ""
    foundConfigPath: "/home/runner/work/openpipeline/openpipeline/src/mapping/bd_rhapsody/config.vsh.yaml"
    configInfo:
      functionalityName: "bd_rhapsody"
      git_tag: ""
      git_remote: "https://github.com/openpipelines-bio/openpipeline"
      viash_version: "0.8.6"
      config: "/home/runner/work/openpipeline/openpipeline/src/mapping/bd_rhapsody/config.vsh.yaml"
      functionalityNamespace: "mapping"
      output: ""
      platform: ""
      git_commit: "8e1f510555276e3962ba94cce0c32905358e819f"
      executable: "/nextflow/mapping/bd_rhapsody/main.nf"
    writtenPath: "/home/runner/work/openpipeline/openpipeline/target/nextflow/mapping/bd_rhapsody"
  - name: "convert/from_bdrhap_to_h5mu"
    repository:
      type: "local"
      localPath: ""
    foundConfigPath: "/home/runner/work/openpipeline/openpipeline/src/convert/from_bdrhap_to_h5mu/config.vsh.yaml"
    configInfo:
      functionalityName: "from_bdrhap_to_h5mu"
      git_tag: ""
      git_remote: "https://github.com/openpipelines-bio/openpipeline"
      viash_version: "0.8.6"
      config: "/home/runner/work/openpipeline/openpipeline/src/convert/from_bdrhap_to_h5mu/config.vsh.yaml"
      functionalityNamespace: "convert"
      output: ""
      platform: ""
      git_commit: "8e1f510555276e3962ba94cce0c32905358e819f"
      executable: "/nextflow/convert/from_bdrhap_to_h5mu/main.nf"
    writtenPath: "/home/runner/work/openpipeline/openpipeline/target/nextflow/convert/from_bdrhap_to_h5mu"
  set_wd_to_resources_dir: false
platforms:
- type: "nextflow"
  id: "nextflow"
  directives:
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: false
    transcript: false
    publish: false
  config:
    labels:
      mem1gb: "memory = 1.GB"
      mem2gb: "memory = 2.GB"
      mem4gb: "memory = 4.GB"
      mem8gb: "memory = 8.GB"
      mem16gb: "memory = 16.GB"
      mem32gb: "memory = 32.GB"
      mem64gb: "memory = 64.GB"
      mem128gb: "memory = 128.GB"
      mem256gb: "memory = 256.GB"
      mem512gb: "memory = 512.GB"
      mem1tb: "memory = 1.TB"
      mem2tb: "memory = 2.TB"
      mem4tb: "memory = 4.TB"
      mem8tb: "memory = 8.TB"
      mem16tb: "memory = 16.TB"
      mem32tb: "memory = 32.TB"
      mem64tb: "memory = 64.TB"
      mem128tb: "memory = 128.TB"
      mem256tb: "memory = 256.TB"
      mem512tb: "memory = 512.TB"
      cpu1: "cpus = 1"
      cpu2: "cpus = 2"
      cpu5: "cpus = 5"
      cpu10: "cpus = 10"
      cpu20: "cpus = 20"
      cpu50: "cpus = 50"
      cpu100: "cpus = 100"
      cpu200: "cpus = 200"
      cpu500: "cpus = 500"
      cpu1000: "cpus = 1000"
    script:
    - "includeConfig(\"nextflow_labels.config\")"
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openpipeline/openpipeline/src/workflows/ingestion/bd_rhapsody/config.vsh.yaml"
  platform: "nextflow"
  output: "/home/runner/work/openpipeline/openpipeline/target/nextflow/workflows/ingestion/bd_rhapsody"
  executable: "/home/runner/work/openpipeline/openpipeline/target/nextflow/workflows/ingestion/bd_rhapsody/main.nf"
  viash_version: "0.8.6"
  git_commit: "8e1f510555276e3962ba94cce0c32905358e819f"
  git_remote: "https://github.com/openpipelines-bio/openpipeline"
