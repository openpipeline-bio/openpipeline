functionality:
  name: "pad_tokenize"
  namespace: "scgpt"
  version: "scgpt-preprocessor_build"
  authors:
  - name: "Dorien Roosen"
    roles:
    - "maintainer"
    - "author"
    info:
      role: "Contributor"
      links:
        email: "dorien@data-intuitive.com"
        github: "dorien-er"
        linkedin: "dorien-roosen"
      organizations:
      - name: "Data Intuitive"
        href: "https://www.data-intuitive.com"
        role: "Data Scientist"
  argument_groups:
  - name: "Inputs"
    arguments:
    - type: "file"
      name: "--input"
      description: "The input h5mu file of pre-processed data.\n"
      info: null
      example:
      - "input.h5ad"
      must_exist: true
      create_parent: true
      required: true
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--modality"
      info: null
      default:
      - "rna"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "file"
      name: "--model_vocab"
      description: "Path to model vocabulary file.\n"
      info: null
      example:
      - "vocab.json"
      must_exist: true
      create_parent: true
      required: true
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--input_layer"
      description: "The name of the layer to be padded and tokenized.\n"
      info: null
      default:
      - "X_binned"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--gene_name_layer"
      description: "The name of the layer containing gene names.\n"
      info: null
      default:
      - "gene_name"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Outputs"
    arguments:
    - type: "file"
      name: "--output_gene_ids"
      description: "The output pytorch tensor file containing the gene ids.\n"
      info: null
      example:
      - "gene_ids.pt"
      must_exist: true
      create_parent: true
      required: true
      direction: "output"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "file"
      name: "--output_values"
      description: "The output pytorch tensor file contianing the tokenized and padded\
        \ values.\n"
      info: null
      example:
      - "values.pt"
      must_exist: true
      create_parent: true
      required: true
      direction: "output"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "file"
      name: "--output_padding_mask"
      description: "The output pytorch tensor file containing the padding mask.\n"
      info: null
      example:
      - "padding_mask.pt"
      must_exist: true
      create_parent: true
      required: true
      direction: "output"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Arguments"
    arguments:
    - type: "string"
      name: "--pad_token"
      description: "Token used for padding.\n"
      info: null
      default:
      - "<pad>"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--pad_value"
      description: "The value of the padding token.\n"
      info: null
      default:
      - -2
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  resources:
  - type: "python_script"
    path: "script.py"
    is_executable: true
  - type: "file"
    path: "./src/workflows/utils/labels.config"
    dest: "nextflow_labels.config"
  description: "Tokenize and pad a batch of data for scGPT integration zero-shot inference\
    \ or fine-tuning.\n"
  test_resources:
  - type: "python_script"
    path: "test.py"
    is_executable: true
  - type: "file"
    path: "resources_test/scgpt/"
  - type: "file"
    path: "src/base/openpipelinetestutils"
    dest: "openpipelinetestutils"
  info: null
  status: "enabled"
  requirements:
    commands:
    - "ps"
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "nvcr.io/nvidia/pytorch:23.09-py3"
  target_organization: "openpipelines-bio"
  target_registry: "ghcr.io"
  target_tag: "scgpt-preprocessor_build"
  namespace_separator: "_"
  resolve_volume: "Automatic"
  chown: true
  setup_strategy: "ifneedbepullelsecachedbuild"
  target_image_source: "https://github.com/openpipelines-bio/openpipeline"
  setup:
  - type: "python"
    user: false
    packages:
    - "anndata~=0.9.1"
    - "mudata~=0.2.3"
    - "pandas!=2.1.2"
    upgrade: true
  - type: "python"
    user: false
    packages:
    - "scgpt==0.2.1"
    - "ipython~=8.5.0"
    upgrade: true
  test_setup:
  - type: "python"
    user: false
    packages:
    - "viashpy==0.6.0"
    upgrade: true
  entrypoint: []
  cmd: null
- type: "nextflow"
  id: "nextflow"
  directives:
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: false
    transcript: false
    publish: false
  config:
    labels:
      mem1gb: "memory = 1.GB"
      mem2gb: "memory = 2.GB"
      mem4gb: "memory = 4.GB"
      mem8gb: "memory = 8.GB"
      mem16gb: "memory = 16.GB"
      mem32gb: "memory = 32.GB"
      mem64gb: "memory = 64.GB"
      mem128gb: "memory = 128.GB"
      mem256gb: "memory = 256.GB"
      mem512gb: "memory = 512.GB"
      mem1tb: "memory = 1.TB"
      mem2tb: "memory = 2.TB"
      mem4tb: "memory = 4.TB"
      mem8tb: "memory = 8.TB"
      mem16tb: "memory = 16.TB"
      mem32tb: "memory = 32.TB"
      mem64tb: "memory = 64.TB"
      mem128tb: "memory = 128.TB"
      mem256tb: "memory = 256.TB"
      mem512tb: "memory = 512.TB"
      cpu1: "cpus = 1"
      cpu2: "cpus = 2"
      cpu5: "cpus = 5"
      cpu10: "cpus = 10"
      cpu20: "cpus = 20"
      cpu50: "cpus = 50"
      cpu100: "cpus = 100"
      cpu200: "cpus = 200"
      cpu500: "cpus = 500"
      cpu1000: "cpus = 1000"
    script:
    - "includeConfig(\"nextflow_labels.config\")"
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openpipeline/openpipeline/src/scgpt/tokenize_pad/config.vsh.yaml"
  platform: "docker"
  output: "/home/runner/work/openpipeline/openpipeline/target/docker/scgpt/pad_tokenize"
  executable: "/home/runner/work/openpipeline/openpipeline/target/docker/scgpt/pad_tokenize/pad_tokenize"
  viash_version: "0.8.5"
  git_commit: "0f8da4b8ddade7039f27a0c052fafb07c6d84d21"
  git_remote: "https://github.com/openpipelines-bio/openpipeline"
  git_tag: "0.2.0-1569-g0f8da4b8dd"
