functionality:
  name: "integration_embedding"
  namespace: "scgpt"
  version: "embed_build"
  authors:
  - name: "Dorien Roosen"
    roles:
    - "maintainer"
    - "author"
    info:
      role: "Contributor"
      links:
        email: "dorien@data-intuitive.com"
        github: "dorien-er"
        linkedin: "dorien-roosen"
      organizations:
      - name: "Data Intuitive"
        href: "https://www.data-intuitive.com"
        role: "Data Scientist"
  argument_groups:
  - name: "Inputs"
    arguments:
    - type: "file"
      name: "--input"
      description: "The input h5mu file containing of pre-processed data. \n"
      info: null
      example:
      - "input.h5ad"
      must_exist: true
      create_parent: true
      required: true
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "file"
      name: "--model_dir"
      description: "The directory containing the model files. Must contain 'vocab.json',\
        \ 'model.pt' and 'args.json' files.\n"
      info: null
      example:
      - "foundational_model/scgpt"
      must_exist: true
      create_parent: true
      required: true
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "file"
      name: "--input_gene_ids"
      description: "Path to pytorch tensor file containing the gene ids.\n"
      info: null
      example:
      - "gene_ids.pt"
      must_exist: true
      create_parent: true
      required: true
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "file"
      name: "--input_values"
      description: "Path to pytorch tensor file containing the tokenized and padded\
        \ values.\n"
      info: null
      example:
      - "values.pt"
      must_exist: true
      create_parent: true
      required: true
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "file"
      name: "--input_padding_mask"
      description: "Path to pytorch tensor file containing the padding mask.\n"
      info: null
      example:
      - "padding_mask.pt"
      must_exist: true
      create_parent: true
      required: true
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--gene_name_layer"
      description: "The name of adata.var column containing gene names.\n"
      info: null
      default:
      - "gene_name"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--batch_id_layer"
      description: "The name of the adata.obs column containing the batch ids.\n"
      info: null
      default:
      - "batch_id"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Outputs"
    arguments:
    - type: "file"
      name: "--output"
      description: "Path to output anndata file containing pre-processed data as well\
        \ as scGPT embeddings.\n"
      info: null
      example:
      - "output.h5ad"
      must_exist: true
      create_parent: true
      required: true
      direction: "output"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--embedding_layer"
      description: "The name of the adata.obsm array to which scGPT embeddings will\
        \ be written.\n"
      info: null
      default:
      - "X_scGPT"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Arguments"
    arguments:
    - type: "string"
      name: "--pad_token"
      description: "The name of the layer to be padded and tokenized\n"
      info: null
      default:
      - "<pad>"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--pad_value"
      description: "The value to be used for padding.\n"
      info: null
      default:
      - -2
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "boolean"
      name: "--load_model_vocab"
      description: "Whether to load the vocabulary from the model or use pytorch vocab.\n"
      info: null
      default:
      - true
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "boolean"
      name: "--load_model_configs"
      description: "Whether to load the configs from the model.\n"
      info: null
      default:
      - true
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--layer_size"
      info: null
      default:
      - 128
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--nhead"
      info: null
      default:
      - 4
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--nlayers"
      info: null
      default:
      - 4
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "double"
      name: "--dropout"
      info: null
      default:
      - 0.2
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "boolean"
      name: "DSBN"
      description: "Domain-specific batch normalization\n"
      info: null
      default:
      - true
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "boolean"
      name: "--GEPC"
      description: "Gene Expression modeling for Cell objective\n"
      info: null
      default:
      - true
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--n_input_bins"
      info: null
      default:
      - 51
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "double"
      name: "--ecs_threshold"
      info: null
      default:
      - 0.8
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "boolean"
      name: "--explicit_zero_prob"
      info: null
      default:
      - true
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "boolean"
      name: "--use_fast_transformer"
      info: null
      default:
      - false
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "boolean"
      name: "--pre_norm"
      info: null
      default:
      - false
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--device"
      description: "Whether to generate embeddings using cpu or gpu (cuda) device.\n"
      info: null
      default:
      - "cpu"
      required: false
      choices:
      - "cpu"
      - "cuda"
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--batch_size"
      info: null
      default:
      - 64
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  resources:
  - type: "python_script"
    path: "script.py"
    is_executable: true
  - type: "file"
    path: "./src/workflows/utils/labels.config"
    dest: "nextflow_labels.config"
  description: "Embedding of a batch of data for scGPT zero-shot or fine-tuning integration.\n"
  test_resources:
  - type: "file"
    path: "src/base/openpipelinetestutils"
    dest: "openpipelinetestutils"
  info: null
  status: "enabled"
  requirements:
    commands:
    - "ps"
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "nvcr.io/nvidia/pytorch:23.09-py3"
  target_organization: "openpipelines-bio"
  target_registry: "ghcr.io"
  target_tag: "main_build"
  namespace_separator: "_"
  resolve_volume: "Automatic"
  chown: true
  setup_strategy: "ifneedbepullelsecachedbuild"
  target_image_source: "https://github.com/openpipelines-bio/openpipeline"
  setup:
  - type: "python"
    user: false
    packages:
    - "anndata~=0.9.1"
    - "mudata~=0.2.3"
    - "pandas!=2.1.2"
    upgrade: true
  - type: "python"
    user: false
    packages:
    - "scgpt==0.2.1"
    upgrade: true
  entrypoint: []
  cmd: null
- type: "nextflow"
  id: "nextflow"
  directives:
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: false
    transcript: false
    publish: false
  config:
    labels:
      mem1gb: "memory = 1.GB"
      mem2gb: "memory = 2.GB"
      mem4gb: "memory = 4.GB"
      mem8gb: "memory = 8.GB"
      mem16gb: "memory = 16.GB"
      mem32gb: "memory = 32.GB"
      mem64gb: "memory = 64.GB"
      mem128gb: "memory = 128.GB"
      mem256gb: "memory = 256.GB"
      mem512gb: "memory = 512.GB"
      mem1tb: "memory = 1.TB"
      mem2tb: "memory = 2.TB"
      mem4tb: "memory = 4.TB"
      mem8tb: "memory = 8.TB"
      mem16tb: "memory = 16.TB"
      mem32tb: "memory = 32.TB"
      mem64tb: "memory = 64.TB"
      mem128tb: "memory = 128.TB"
      mem256tb: "memory = 256.TB"
      mem512tb: "memory = 512.TB"
      cpu1: "cpus = 1"
      cpu2: "cpus = 2"
      cpu5: "cpus = 5"
      cpu10: "cpus = 10"
      cpu20: "cpus = 20"
      cpu50: "cpus = 50"
      cpu100: "cpus = 100"
      cpu200: "cpus = 200"
      cpu500: "cpus = 500"
      cpu1000: "cpus = 1000"
    script:
    - "includeConfig(\"nextflow_labels.config\")"
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openpipeline/openpipeline/src/scgpt/integration_embedding/config.vsh.yaml"
  platform: "docker"
  output: "/home/runner/work/openpipeline/openpipeline/target/docker/scgpt/integration_embedding"
  executable: "/home/runner/work/openpipeline/openpipeline/target/docker/scgpt/integration_embedding/integration_embedding"
  viash_version: "0.8.5"
  git_commit: "2dece7ffe415920184b7206d0be01418f5a609b7"
  git_remote: "https://github.com/openpipelines-bio/openpipeline"
  git_tag: "0.2.0-1554-g2dece7ffe4"
