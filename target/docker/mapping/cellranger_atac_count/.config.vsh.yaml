functionality:
  name: "cellranger_atac_count"
  namespace: "mapping"
  version: "integration_build"
  authors:
  - name: "Vladimir Shitov"
    roles:
    - "author"
    info:
      role: "Contributor"
      links:
        email: "vladimir.shitov@helmholtz-muenchen.de"
        github: "vladimirshitov"
        orcid: "0000-0002-1960-8812"
        linkedin: "vladimir-shitov-9a659513b"
      organizations:
      - name: "Helmholtz Munich"
        href: "https://www.helmholtz-munich.de"
        role: "PhD Candidate"
  argument_groups:
  - name: "Inputs"
    arguments:
    - type: "file"
      name: "--input"
      description: "The fastq.gz files to align. Can also be a single directory containing\
        \ fastq.gz files."
      info: null
      example:
      - "sample_S1_L001_R1_001.fastq.gz"
      - "sample_S1_L001_R2_001.fastq.gz"
      must_exist: true
      create_parent: true
      required: true
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "file"
      name: "--reference"
      description: "The path to Cell Ranger reference tar.gz file. Can also be a directory."
      info: null
      example:
      - "reference.tar.gz"
      must_exist: true
      create_parent: true
      required: true
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Outputs"
    arguments:
    - type: "file"
      name: "--output"
      description: "The folder to store the alignment results."
      info: null
      example:
      - "/path/to/output"
      must_exist: true
      create_parent: true
      required: true
      direction: "output"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Arguments"
    arguments:
    - type: "string"
      name: "--description"
      description: "Sample description to embed in output files"
      info: null
      default:
      - ""
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--force_cells"
      description: "Define the top N barcodes with the most fragments overlapping\
        \ peaks as cells and override the cell calling algorithm. N must be a positive\
        \ integer <= 20,000. Use this option if the number of cells estimated by Cell\
        \ Ranger ATAC is not consistent with the barcode rank plot"
      info: null
      required: false
      max: 20000
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "file"
      name: "--peaks"
      description: "Override peak caller: specify peaks to use in downstream analyses\
        \ from supplied 3-column BED file. The supplied peaks file must be sorted\
        \ by position and not contain overlapping peaks; comment lines beginning with\
        \ # are allowed"
      info: null
      must_exist: true
      create_parent: true
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--dim_reduce"
      description: "Dimensionality reduction mode for clustering"
      info: null
      default:
      - "lsa"
      required: false
      choices:
      - "lsa"
      - "pca"
      - "plsa"
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "double"
      name: "--subsample_rate"
      description: "Downsample to preserve this fraction of reads"
      info: null
      example:
      - 0.1
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--lanes"
      description: "bcl2fastq option. Semicolon-delimited series of lanes to demultiplex.\
        \ Use this if you have a sample sheet for an entire flow cell but only want\
        \ to generate a few lanes for further 10x Genomics analysis."
      info: null
      example:
      - "1,3"
      required: false
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
  resources:
  - type: "bash_script"
    path: "script.sh"
    is_executable: true
  - type: "file"
    path: "./src/workflows/utils/labels.config"
    dest: "nextflow_labels.config"
  description: "Align fastq files using Cell Ranger ATAC count."
  test_resources:
  - type: "python_script"
    path: "test.py"
    is_executable: true
  - type: "file"
    path: "resources_test/cellranger_atac_tiny_bcl"
  - type: "file"
    path: "src/utils/setup_logger.py"
  - type: "file"
    path: "resources_test/reference_gencodev41_chr1"
  - type: "file"
    path: "src/base/openpipelinetestutils"
    dest: "openpipelinetestutils"
  info: null
  status: "enabled"
  requirements:
    commands:
    - "ps"
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "ghcr.io/data-intuitive/cellranger_atac:2.1"
  target_organization: "openpipelines-bio"
  target_registry: "ghcr.io"
  target_tag: "integration_build"
  namespace_separator: "/"
  resolve_volume: "Automatic"
  chown: true
  setup_strategy: "ifneedbepullelsecachedbuild"
  target_image_source: "https://github.com/openpipelines-bio/openpipeline"
  setup:
  - type: "docker"
    run:
    - "DEBIAN_FRONTEND=noninteractive apt update \\\n&& apt upgrade -y && apt install\
      \ -y procps && rm -rf /var/lib/apt/lists/*\n"
  entrypoint: []
  cmd: null
- type: "nextflow"
  id: "nextflow"
  directives:
    label:
    - "highmem"
    - "highcpu"
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: false
    transcript: false
    publish: false
  config:
    labels:
      mem1gb: "memory = 1.GB"
      mem2gb: "memory = 2.GB"
      mem4gb: "memory = 4.GB"
      mem8gb: "memory = 8.GB"
      mem16gb: "memory = 16.GB"
      mem32gb: "memory = 32.GB"
      mem64gb: "memory = 64.GB"
      mem128gb: "memory = 128.GB"
      mem256gb: "memory = 256.GB"
      mem512gb: "memory = 512.GB"
      mem1tb: "memory = 1.TB"
      mem2tb: "memory = 2.TB"
      mem4tb: "memory = 4.TB"
      mem8tb: "memory = 8.TB"
      mem16tb: "memory = 16.TB"
      mem32tb: "memory = 32.TB"
      mem64tb: "memory = 64.TB"
      mem128tb: "memory = 128.TB"
      mem256tb: "memory = 256.TB"
      mem512tb: "memory = 512.TB"
      cpu1: "cpus = 1"
      cpu2: "cpus = 2"
      cpu5: "cpus = 5"
      cpu10: "cpus = 10"
      cpu20: "cpus = 20"
      cpu50: "cpus = 50"
      cpu100: "cpus = 100"
      cpu200: "cpus = 200"
      cpu500: "cpus = 500"
      cpu1000: "cpus = 1000"
    script:
    - "includeConfig(\"nextflow_labels.config\")"
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openpipeline/openpipeline/src/mapping/cellranger_atac_count/config.vsh.yaml"
  platform: "docker"
  output: "/home/runner/work/openpipeline/openpipeline/target/docker/mapping/cellranger_atac_count"
  executable: "/home/runner/work/openpipeline/openpipeline/target/docker/mapping/cellranger_atac_count/cellranger_atac_count"
  viash_version: "0.8.6"
  git_commit: "1caae6eeb8e92a9df9964eea63b37e272399689f"
  git_remote: "https://github.com/openpipelines-bio/openpipeline"
