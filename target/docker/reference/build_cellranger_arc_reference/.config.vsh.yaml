functionality:
  name: "build_cellranger_arc_reference"
  namespace: "reference"
  version: "main_build"
  authors:
  - name: "Vladimir Shitov"
    roles:
    - "author"
    info:
      role: "Contributor"
      links:
        email: "vladimir.shitov@helmholtz-muenchen.de"
        github: "vladimirshitov"
        orcid: "0000-0002-1960-8812"
        linkedin: "vladimir-shitov-9a659513b"
      organizations:
      - name: "Helmholtz Munich"
        href: "https://www.helmholtz-munich.de"
        role: "PhD Candidate"
  arguments:
  - type: "file"
    name: "--genome_fasta"
    description: "Reference genome fasta."
    info: null
    example:
    - "genome_sequence.fa.gz"
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--annotation_gtf"
    description: "Reference annotation."
    info: null
    example:
    - "annotation.gtf.gz"
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--motifs_file"
    description: "Transcription factor motifs in JASPAR format. See https://support.10xgenomics.com/single-cell-multiome-atac-gex/software/pipelines/latest/advanced/references"
    info: null
    example:
    - "JASPAR2024_CORE_non-redundant_pfms_jaspar.txt.modified"
    must_exist: true
    create_parent: true
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "string"
    name: "--non_nuclear_contigs"
    description: "Name(s) of contig(s) that do not have any chromatin structure, for\
      \ example, mitochondria or plastids. These contigs are excluded from peak calling\
      \ since the entire contig will be \"open\" due to a lack of chromatin structure.\
      \ Leave empty if there are no such contigs."
    info: null
    example:
    - "chrM"
    default:
    - "chrM"
    required: false
    direction: "input"
    multiple: true
    multiple_sep: ";"
    dest: "par"
  - type: "file"
    name: "--output"
    description: "Output folder"
    info: null
    example:
    - "cellranger_reference"
    must_exist: true
    create_parent: true
    required: true
    direction: "output"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "string"
    name: "--genome"
    description: "Name of the genome. This will be the name of the intermediate output\
      \ folder"
    info: null
    example:
    - "GRCh38"
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "string"
    name: "--organism"
    description: "Name of the organism. This is displayed in the web summary but is\
      \ otherwise not used in the analysis."
    info: null
    default:
    - "Homo_sapiens"
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  resources:
  - type: "bash_script"
    path: "script.sh"
    is_executable: true
  - type: "file"
    path: "./src/workflows/utils/labels.config"
    dest: "nextflow_labels.config"
  description: "Build a Cell Ranger-arc and -atac compatible reference folder from\
    \ user-supplied genome FASTA and gene GTF files. Creates a new folder named after\
    \ the genome."
  test_resources:
  - type: "bash_script"
    path: "run_test.sh"
    is_executable: true
  - type: "file"
    path: "resources_test/reference_gencodev41_chr1"
  - type: "file"
    path: "src/base/openpipelinetestutils"
    dest: "openpipelinetestutils"
  info: null
  status: "enabled"
  requirements:
    commands:
    - "ps"
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "ghcr.io/data-intuitive/cellranger_arc:2.0"
  target_organization: "openpipelines-bio"
  target_registry: "ghcr.io"
  target_tag: "main_build"
  namespace_separator: "/"
  resolve_volume: "Automatic"
  chown: true
  setup_strategy: "ifneedbepullelsecachedbuild"
  target_image_source: "https://github.com/openpipelines-bio/openpipeline"
  setup:
  - type: "docker"
    run:
    - "DEBIAN_FRONTEND=noninteractive apt update && \\\napt upgrade -y && apt install\
      \ -y procps pigz && rm -rf /var/lib/apt/lists/*\n"
  test_setup:
  - type: "docker"
  - type: "apt"
    packages:
    - "git"
    - "wget"
    interactive: false
  - type: "docker"
    run:
    - "TARGETARCH=\"${TARGETARCH:-$(dpkg --print-architecture)}\" && \\\nTARGETOS=\"\
      ${TARGETOS:-linux}\" && \\\nPATH=\"${PATH}:/usr/local/go/bin\" && \\\nwget https://go.dev/dl/go1.21.4.$TARGETOS-$TARGETARCH.tar.gz\
      \ && tar -C /usr/local/ -xzf go1.21.4.$TARGETOS-$TARGETARCH.tar.gz && \\\nrm\
      \ go1.21.4.$TARGETOS-$TARGETARCH.tar.gz && \\\ngit clone --branch v2.5.0 https://github.com/shenwei356/seqkit.git\
      \ && \\\ncd seqkit/seqkit/ && go build && cp seqkit /usr/bin/ && cd ../../ &&\
      \ rm -rf seqkit && rm -r /usr/local/go\n"
  entrypoint: []
  cmd: null
- type: "nextflow"
  id: "nextflow"
  directives:
    label:
    - "highmem"
    - "highcpu"
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: false
    transcript: false
    publish: false
  config:
    labels:
      mem1gb: "memory = 1.GB"
      mem2gb: "memory = 2.GB"
      mem4gb: "memory = 4.GB"
      mem8gb: "memory = 8.GB"
      mem16gb: "memory = 16.GB"
      mem32gb: "memory = 32.GB"
      mem64gb: "memory = 64.GB"
      mem128gb: "memory = 128.GB"
      mem256gb: "memory = 256.GB"
      mem512gb: "memory = 512.GB"
      mem1tb: "memory = 1.TB"
      mem2tb: "memory = 2.TB"
      mem4tb: "memory = 4.TB"
      mem8tb: "memory = 8.TB"
      mem16tb: "memory = 16.TB"
      mem32tb: "memory = 32.TB"
      mem64tb: "memory = 64.TB"
      mem128tb: "memory = 128.TB"
      mem256tb: "memory = 256.TB"
      mem512tb: "memory = 512.TB"
      cpu1: "cpus = 1"
      cpu2: "cpus = 2"
      cpu5: "cpus = 5"
      cpu10: "cpus = 10"
      cpu20: "cpus = 20"
      cpu50: "cpus = 50"
      cpu100: "cpus = 100"
      cpu200: "cpus = 200"
      cpu500: "cpus = 500"
      cpu1000: "cpus = 1000"
    script:
    - "includeConfig(\"nextflow_labels.config\")"
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openpipeline/openpipeline/src/reference/build_cellranger_arc_reference/config.vsh.yaml"
  platform: "docker"
  output: "/home/runner/work/openpipeline/openpipeline/target/docker/reference/build_cellranger_arc_reference"
  executable: "/home/runner/work/openpipeline/openpipeline/target/docker/reference/build_cellranger_arc_reference/build_cellranger_arc_reference"
  viash_version: "0.8.6"
  git_commit: "8e1f510555276e3962ba94cce0c32905358e819f"
  git_remote: "https://github.com/openpipelines-bio/openpipeline"
