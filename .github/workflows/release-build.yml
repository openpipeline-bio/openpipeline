name: release build

on: 
  workflow_dispatch:
    inputs:
      version_tag:
        description: Version tag
        required: true

jobs:
  # phase 1
  list:
    env:
      s3_bucket: s3://openpipelines-data/
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - uses: viash-io/viash-actions/setup@v1

    # create cachehash key
    - name: Create hash key
      id: cachehash
      run: |
        AWS_EC2_METADATA_DISABLED=true aws s3 ls $s3_bucket --recursive --no-sign-request > bucket-contents.txt
        echo "cachehash=resources_test__$( md5sum bucket-contents.txt | awk '{ print $1 }' )" >> $GITHUB_OUTPUT
    
    # initialize cache
    - name: Cache resources data
      uses: actions/cache@v3
      with:
        path: resources_test
        key: ${{ steps.cachehash.outputs.cachehash }}
        restore-keys: resources_test_

    # sync if need be
    - name: Sync test resources
      run: |
        viash run \
          -p native \
          src/download/sync_test_resources/config.vsh.yaml -- \
          --input $s3_bucket \
          --delete
        tree resources_test/ -L 3

    - name: Remove target folder from .gitignore
      run: |
        # allow publishing the target folder
        sed -i '/^target.*/d' .gitignore

    - uses: viash-io/viash-actions/ns-build@v2
      with:
        config_mod: ".functionality.version := '${{ github.event.inputs.version_tag }}'"
        parallel: true

    - name: Build nextflow schemas
      uses: viash-io/viash-actions/build-nextflow-schemas@v2
      with:
        workflows: workflows
        components: src
        token: ${{ secrets.GTHB_PAT }}
        tools_version: 'main_build'
   
    - name: Build parameter files
      uses: viash-io/viash-actions/build-nextflow-params@v2
      with:
        workflows: workflows
        components: src
        token: ${{ secrets.GTHB_PAT }}
        tools_version: 'main_build'

    - name: Deploy to target branch
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: .
        publish_branch: release
        full_commit_message: "Deploy for release ${{ github.event.inputs.version_tag }} from ${{ github.sha }}"

    - id: ns_list_components
      uses: viash-io/viash-actions/ns-list@v2
      with:
        platform: docker
        src: src
        format: json

    - id: ns_list_workflows
      uses: viash-io/viash-actions/ns-list@v2
      with:
        src: workflows
        format: json

    - id: set_matrix
      run: |
        echo "components=$(jq -c '[ .[] | 
          { 
            "name": (.functionality.namespace + "/" + .functionality.name),
            "dir": .info.config | capture("^(?<dir>.*\/)").dir
          }
        ]' ${{ steps.ns_list_components.outputs.output_file }} )" >> $GITHUB_OUTPUT

        echo "workflows=$(jq -c '[ .[] | 
          { 
            "name": (.functionality.namespace + "/" + .functionality.name),
            "main_script": (.info.config | capture("^(?<dir>.*\/)").dir + "/" + .functionality.test_resources[].path),
            "entry": .functionality.test_resources[].entrypoint
          }
        ]' ${{ steps.ns_list_workflows.outputs.output_file }} )" >> $GITHUB_OUTPUT
      
    outputs:
      component_matrix: ${{ steps.set_matrix.outputs.components }}
      workflow_matrix: ${{ steps.set_matrix.outputs.workflows }}
      cachehash: ${{ steps.cachehash.outputs.cachehash }}

  # phase 2
  build:
    needs: list

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        component: ${{ fromJson(needs.list.outputs.component_matrix) }}

    steps:
    - uses: actions/checkout@v3

    - uses: viash-io/viash-actions/setup@v1

    - name: Build container
      uses: viash-io/viash-actions/ns-build@v2
      with:
        config_mod: .functionality.version := 'main_build'
        platform: docker
        src: ${{ matrix.component.dir }}
        setup: build
        
    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ secrets.GTHB_USER }}
        password: ${{ secrets.GTHB_PAT }}

    - name: Push container
      uses: viash-io/viash-actions/ns-build@v2
      with:
        config_mod: .functionality.version := '${{ github.event.inputs.version_tag }}'
        platform: docker
        src: ${{ matrix.component.dir }}
        setup: push

  ###################################3
  # phase 3
  integration_test:
    needs: [ build, list ]
    if: "${{ needs.list.outputs.workflow_matrix != '[]' }}"

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        component: ${{ fromJson(needs.list.outputs.workflow_matrix) }}

    steps:
    - uses: actions/checkout@v3

    - uses: viash-io/viash-actions/setup@v1

    - uses: nf-core/setup-nextflow@v1.2.0

    # build target dir
    # use containers from release branch, hopefully these are available
    - name: Build target dir
      uses: viash-io/viash-actions/ns-build@v2
      with:
        config_mod: ".functionality.version := '${{ github.event.inputs.version_tag }}'"
        parallel: true

    # use cache
    - name: Cache resources data
      uses: actions/cache@v3
      timeout-minutes: 5
      with:
        path: resources_test
        key: ${{ needs.list.outputs.cachehash }}

    - name: Run integration test
      timeout-minutes: 45
      run: |
        # todo: replace with viash test command
        export NXF_VER=22.04.5
        nextflow run . \
          -main-script "${{ matrix.component.main_script }}" \
          -entry ${{ matrix.component.entry }} \
          -profile docker,mount_temp,no_publish \
          -c workflows/utils/labels_ci.config

  ###################################3
  # phase 4
  component_test:
    needs: [ build, list ]
    if: ${{ needs.list.outputs.matrix != '[]' && needs.list.outputs.matrix != '' }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        component: ${{ fromJson(needs.list.outputs.component_matrix) }}

    steps:
    - uses: actions/checkout@v3

    - uses: viash-io/viash-actions/setup@v1

    # use cache
    - name: Cache resources data
      uses: actions/cache@v3
      timeout-minutes: 5
      with:
        path: resources_test
        key: ${{ needs.list.outputs.cachehash }}

    - name: Test component
      timeout-minutes: 30
      run: |
        viash ns test \
          --config_mod ".functionality.version := '${{ github.event.inputs.version_tag }}'" \
          -s "${{ matrix.component.dir }}" \
          --cpus 2 \
          --memory "5gb"

  ###################################3
  # phase 5
  push_documentation:
    runs-on: ubuntu-latest
    needs: [ list ]

    steps:
      - uses: actions/checkout@v3
        with:
          path: openpipelines

      - uses: actions/checkout@v3
        with:
          repository: openpipelines-bio/website
          path: website

      - uses: viash-io/viash-actions/setup@v1

      - uses: viash-io/viash-actions/generate_documentation_qmd@main
        with:
          input_dir: ./
          output_dir: website
          dest_path: "{type}s/{namespace}/{name}.qmd"
          token: ${{ secrets.GTHB_PAT }}
          tools_version: main_build

      - name: Create Pull Request
        env:
          TAG: ${{ github.inputs.version_tag }}
        working-directory: website
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add website
          git checkout -b "release-$TAG"
          git commit -m "OpenPipelines release $TAG"
          git push
          gh auth login --with-token "${{ secrets.GTHB_PAT }}"
          gh pr create --title "Openpipeline release $TAG" --base main --head "release-$TAG" --body "" --project "openpipelines-bio/website"