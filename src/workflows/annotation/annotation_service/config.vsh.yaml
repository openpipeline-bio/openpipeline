functionality:
  name: "annotation_service"
  namespace: "workflows/annotation"
  description: "A pipeline to process and annotate gene expression data."
  authors:
    - __merge__: /src/authors/dorien_roosen.yaml
      roles: [ author, maintainer ]

  argument_groups:
    - name: Query input
      description: The input query dataset(s) to be annotated
      arguments:
        - name: "--id"
          required: true
          type: string
          description: ID of the sample.
          example: foo
        - name: "--input"
          required: true
          type: file
          multiple: true
          description: Input query dataset(s) to be annotated
          example: input.h5mu

    - name: Query input specifications
      description: Specifications of vars, obs and layers of the input query dataset(s) h5mu files
      arguments:
        - name: "--query_rna_layer"
          type: string
          description: "Input layer for the gene expression modality of the query datasets. If not specified, .X is used."
          required: false
        - name: "--var_query_gene_names"
          type: string
          required: false
          description: |
            The name of the adata var column containing gene names; when no gene_name_layer is provided, the var index will be used.
        - name: "--obs_query_batch"
          required: false
          type: string
          description: |
            The name of the adata obs column containing the batch labels.

    - name: Reference input
      description: The reference dataset to be used as a reference mapper and to train annotation algorithms on.
      arguments:
        - name: "--reference"
          type: file
          required: false
          description: |
            The reference dataset to be used as a reference mapper and to train annotation algorithms on.
          example: https://zenodo.org/records/7587774/files/TS_Lung_filtered.h5ad

    - name: Reference input specifications
      description: Specifications of vars, obs and layers of the reference dataset h5 file
      arguments:
        - name: "--obs_reference_batch"
          type: string
          required: false # only for non-scgpt
          description: |
            The .obs column of the reference dataset containing the batch information.
        - name: "--reference_rna_layer"
          type: string
          description: "Input layer for the gene expression modality of the reference dataset. If not specified, .X is used."
          required: false
        - name: "--obs_reference_targets"
          type: string
          example: [ ann_level_1, ann_level_2, ann_level_3, ann_level_4, ann_level_5, ann_finest_level ]
          required: true
          multiple: true
          description: The `.obs` key(s) of the target labels to tranfer.

    - name: Annotation methods
      description: The available annotation methods to annotate the query dataset(s) with.
      arguments:
        - name: "--annotation_methods"
          type: string
          multiple: true
          required: true
          choices: [harmony_knn, scgpt_annotation]
          example: harmony_knn

    - name: scGPT model input
      description: scGPT model input, required for scGPT annotation methods
      arguments:
        - name: "--model"
          type: file
          required: false
          example: best_model.pt
          description: |
            The model file containing checkpoints and cell type label mapper.
        - name: "--model_config"
          type: file
          required: false
          example: args.json
          description: |
            The model configuration file. 
        - name: "--model_vocab"
          type: file
          required: false
          example: vocab.json
          description: |
            Model vocabulary file directory.
        - name: "--finetuned_checkpoints_key"
          type: string
          default: model_state_dict
          description: |
            Key in the model  file containing the pretrained checkpoints.
        - name: "--label_mapper_key"
          type: string
          default: id_to_class
          description: |
            Key in the model file containing the cell type class to label mapper dictionary.

    - name: "Pre-processing options: RNA filtering"
      description: Pre-processing options for filtering RNA data
      arguments:
        - name: "--rna_min_counts"
          example: 200
          type: integer
          description: Minimum number of counts captured per cell.
        - name: "--rna_max_counts"
          example: 5000000
          type: integer
          description: Maximum number of counts captured per cell.
        - name: "--rna_min_genes_per_cell"
          type: integer
          example: 200
          description: Minimum of non-zero values per cell.
        - name: "--rna_max_genes_per_cell"
          example: 1500000
          type: integer
          description: Maximum of non-zero values per cell.
        - name: "--rna_min_cells_per_gene"
          example: 3
          type: integer
          description: Minimum of non-zero values per gene.
        - name: "--rna_min_fraction_mito"
          example: 0
          type: double
          description: Minimum fraction of UMIs that are mitochondrial.
        - name: "--rna_max_fraction_mito"
          type: double
          example: 0.2
          description: Maximum fraction of UMIs that are mitochondrial.

    - name: "Pre-processing options: Highly variable features detection"
      description: Pre-processing options for detecting highly variable features
      arguments:
        - name: "--highly_variable_features_var_output"
          alternatives: ["--filter_with_hvg_var_output"]
          required: false
          type: string
          default: "filter_with_hvg"
          description: In which .var slot to store a boolean array corresponding to the highly variable genes.
        - name: "--highly_variable_features_obs_batch_key"
          alternatives: ["--filter_with_hvg_obs_batch_key"]
          type: string
          default: "sample_id"
          required: false
          description: |
            If specified, highly-variable genes are selected within each batch separately and merged. This simple 
            process avoids the selection of batch-specific genes and acts as a lightweight batch correction method.
    
    - name: "Pre-processing options: Mitochondrial Gene Detection"
      description: Pre-processing options for detecting mitochondrial genes
      arguments:
        - name: "--var_name_mitochondrial_genes"
          type: string
          required: false
          description: |
            In which .var slot to store a boolean array corresponding the mitochondrial genes.
        - name: "--obs_name_mitochondrial_fraction"
          type: string
          required: false
          description: |
            When specified, write the fraction of counts originating from mitochondrial genes 
            (based on --mitochondrial_gene_regex) to an .obs column with the specified name.
            Requires --var_name_mitochondrial_genes.
        - name: "--var_gene_names"
          required: false
          example: "gene_symbol"
          type: string
          description: |
            .var column name to be used to detect mitochondrial genes instead of .var_names (default if not set).
            Gene names matching with the regex value from --mitochondrial_gene_regex will be identified
            as a mitochondrial gene.
        - name: --mitochondrial_gene_regex
          type: string
          description: |
            Regex string that identifies mitochondrial genes from --var_gene_names.
            By default will detect human and mouse mitochondrial genes from a gene symbol.
          required: false
          default: "^[mM][tT]-"

    - name: "Pre-processing options: QC metrics calculation options"
      description: Pre-processing options for calculating QC metrics
      arguments:
        - name: "--var_qc_metrics"
          description: |
            Keys to select a boolean (containing only True or False) column from .var.
            For each cell, calculate the proportion of total values for genes which are labeled 'True', 
            compared to the total sum of the values for all genes. Defaults to the combined values specified for
            --var_name_mitochondrial_genes and --highly_variable_features_var_output.
          type: string
          multiple: True
          multiple_sep: ','
          required: false
          example: "ercc,highly_variable"
        - name: "--top_n_vars"
          type: integer
          description: |
            Number of top vars to be used to calculate cumulative proportions.
            If not specified, proportions are not calculated. `--top_n_vars 20,50` finds
            cumulative proportion to the 20th and 50th most expressed vars.
          multiple: true
          multiple_sep: ','
          required: false
          default: [50, 100, 200, 500]

    - name: Harmony integration options
      description: Specifications for harmony integration. Only relevant for annotation method 'harmony_knn'.
      arguments:
        - name: "--theta"
          type: double
          description: |
            Diversity clustering penalty parameter. Specify for each variable in group.by.vars. 
            theta=0 does not encourage any diversity. Larger values of theta
            result in more diverse clusters."
          default: 2
          example: [0, 1, 2]
          multiple: true

    - name: KNN label transfer options
      description: Specifications for KNN label transfer. Relevant for annotation methods that perform KNN label transfer (harmony_knn, scanvi_knn, bbknn, scvi_knn, scgpt_integration_knn)
      arguments:
        - name: "--weights"
          type: string
          default: "uniform"
          choices: ["uniform", "distance"]
          description: |
            Weight function used in prediction. Possible values are:
            `uniform` (all points in each neighborhood are weighted equally) or 
            `distance` (weight points by the inverse of their distance)
        - name: "--n_neighbors"
          type: integer
          default: 15
          required: false
          description: |
            The number of neighbors to use in k-neighbor graph structure used for fast approximate nearest neighbor search with PyNNDescent. 
            Larger values will result in more accurate search results at the cost of computation time.

    - name: scGPT annotation options
      description: Specifications for scGPT annotation. Only relevant for annotation method 'scgpt_annotation' or 'scgpt_integration_knn'.
      arguments:
        - name: "--pad_token"
          type: string
          default: "<pad>"
          required: false
          description: |
            Token used for padding.
        - name: "--pad_value"
          type: integer
          default: -2
          required: false
          description: |
            The value of the padding token.
        - name: "--n_hvg"
          type: integer
          default: 1200
          description: |
            Number of highly variable genes to subset for.
        - name: --dsbn
          type: boolean
          default: true
          description: |
            Apply domain-specific batch normalization
        - name: "--batch_size"
          type: integer
          default: 64
          description: |
            The batch size to be used for embedding inference.
        - name: "--n_input_bins"
          type: integer
          default: 51
          required: False
          min: 1
          description: |
            The number of bins to discretize the data into; When no value is provided, data won't be binned.
        - name: "--seed"
          type: integer
          required: false
          description: |
            Seed for random number generation used for binning. If not set, no seed is used.

    - name: Outputs
      description: The output file to write the annotated dataset to.
      arguments:
      - name: "--output"
        type: file
        direction: output
        required: true
        description: |
          The output file.
        example: output.h5mu

  dependencies:
    - name: convert/from_h5ad_to_h5mu
    - name: dataflow/split_samples
    - name: workflows/multiomics/process_samples
      alias: process_samples_workflow
    - name: workflows/annotation/harmony_knn
      alias: harmony_knn_workflow
    - name: workflows/annotation/scgpt_annotation
      alias: scgpt_annotation_workflow

  resources:
    - type: nextflow_script
      path: main.nf
      entrypoint: run_wf

platforms:
  - type: nextflow
