name: "bbknn_knn"
namespace: "workflows/annotation"
description: "Cell type annotation workflow by performing bbknn integration of reference and query dataset followed by KNN label transfer."
authors:
  - __merge__: /src/authors/dorien_roosen.yaml
    roles: [ author, maintainer ]
  - __merge__: /src/authors/weiwei_schultz.yaml
    roles: [ contributor ]

argument_groups:
  - name: Query Input
    arguments:
      - name: "--id"
        required: true
        type: string
        description: ID of the sample.
        example: foo
      - name: "--input"
        required: true
        type: file
        description: Input dataset consisting of the (unlabeled) query observations. The dataset is expected to be pre-processed in the same way as --reference.
        example: input.h5mu
      - name: "--modality"
        description: Which modality to process. Should match the modality of the --reference dataset.
        type: string
        default: "rna"
        required: false
      - name: "--input_obsm_embedding"
        required: true
        example: "X_pca"
        type: string
        description: Embedding .obsm column to use as input for integration. Should match the embedding .obsm columng of the --reference dataset.
      - name: "--input_obs_batch_label"
        type: string
        description: "The .obs field in the input (query) dataset containing the batch labels."
        example: "sample"
        required: true

  - name: Reference input
    arguments:
      - name: "--reference"
        required: true
        type: file
        description: Reference dataset consisting of the labeled observations to train the KNN classifier on. The dataset is expected to be pre-processed in the same way as the --input query dataset.
        example: reference.h5mu
      - name: "--reference_obs_targets"
        type: string
        example: [ ann_level_1, ann_level_2, ann_level_3, ann_level_4, ann_level_5, ann_finest_level ]
        required: true
        multiple: true
        description: The `.obs` key(s) of the target labels to transfer.
      - name: "--reference_obs_batch_label"
        type: string
        description:  "The .obs field in the reference dataset containing the batch labels."
        example: "sample"
        required: true

  - name: BBKNN integration options
    arguments:
      - name: "--n_neighbors_within_batch"
        type: integer
        description: |
          How many top neighbours to report for each batch during integration; 
          total number of neighbours in the initial k-nearest-neighbours computation will be this number times the number of batches.
        default: 3
      - name: "--n_pcs"
        type: integer
        description: How many dimensions (in case of PCA, principal components) to use in the analysis.
        default: 50
      - name: "--n_trim"
        type: integer
        description: Trim the neighbours of each cell to these many top connectivities. May help with population independence and improve the tidiness of clustering. The lower the value the more independent the individual populations, at the cost of more conserved batch effect. If `None` (default), sets the parameter value automatically to 10 times `neighbors_within_batch` times the number of batches. Set to 0 to skip.

  - name: Leiden clustering options
    arguments:
      - name: "--leiden_resolution"
        type: double
        description: Control the coarseness of the clustering. Higher values lead to more clusters.
        min: 0
        default: [1]
        multiple: true

  - name: Neighbor classifier arguments
    arguments:
      - name: "--weights"
        type: string
        default: "uniform"
        choices: ["uniform", "distance"]
        description: |
          Weight function used in prediction. Possible values are:
          `uniform` (all points in each neighborhood are weighted equally) or 
          `distance` (weight points by the inverse of their distance)
      - name: "--n_neighbors"
        type: integer
        default: 15
        required: false
        description: |
          The number of neighbors to use in k-neighbor graph structure used for fast approximate nearest neighbor search with PyNNDescent. 
          Larger values will result in more accurate search results at the cost of computation time.

  - name: "Outputs"
    arguments:
      - name: "--output"
        type: file
        required: true
        direction: output
        description: The query data in .h5mu format with predicted labels predicted from the classifier trained on the reference.
        example: output.h5mu
      - name: "--output_obs_predictions"
        type: string
        required: false
        multiple: true
        description: |
          In which `.obs` slots to store the predicted cell labels.
          If provided, must have the same length as `--reference_obs_targets`.
          If empty, will default to the `reference_obs_targets` combined with the `"_pred"` suffix.
      - name: "--output_obs_probability"
        type: string
        required: false
        multiple: true
        description: |
          In which `.obs` slots to store the probability of the predictions.
          If provided, must have the same length as `--reference_obs_targets`.
          If empty, will default to the `reference_obs_targets` combined with the `"_probability"` suffix.
      - name: "--output_obsm_integrated"
        type: string
        default: "X_integrated_bbknn"
        required: false
        description: "In which .obsm slot to store the integrated embedding."
      - name: "--output_compression"
        type: string
        description: |
          The compression format to be used on the output h5mu object.
        choices: ["gzip", "lzf"]
        required: false
        example: "gzip"

dependencies:
  - name: workflows/integration/bbknn_leiden
    alias: bbknn_leiden_workflow
  - name: labels_transfer/knn
  - name: dataflow/split_h5mu
  - name: dataflow/concatenate_h5mu
  - name: metadata/add_id
  - name: metadata/copy_obs
  - name: filter/subset_obsp

resources:
  - type: nextflow_script
    path: main.nf
    entrypoint: run_wf

test_resources:
  - type: nextflow_script
    path: test.nf
    entrypoint: test_wf
  - path: /resources_test/scgpt

runners:
  - type: nextflow
