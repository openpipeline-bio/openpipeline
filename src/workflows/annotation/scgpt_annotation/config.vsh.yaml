functionality:
  name: "scgpt_annotation"
  namespace: "workflows/annotation"
  description: "Run scGPT integration (cell embedding generation) followed by neighbour calculations, leiden clustering and run umap on the result."
  authors:
    - __merge__: /src/authors/dorien_roosen.yaml
      roles: [ author, maintainer ]
    - __merge__: /src/authors/jakub_majercik.yaml
      roles: [ author ]
    - __merge__: /src/authors/weiwei_schultz.yaml
      roles: [ contributor ]
    - __merge__: /src/authors/elizabeth_mlynarski.yaml
      roles: [ author ]

  __merge__: ../api/common_arguments_scgpt.yaml

  argument_groups:
    - name: "scGPT embedding and annotation arguments"
      arguments:
        - name: "--label_mapper_key"
          type: string
          required: true
          default: id_to_class
          description: |
            Key in the model file containing the cell type class to label mapper dictionary. Note that the provide model should be a fine-tuned model containing keys for both checkpoints and the label mapper.
        - name: --dsbn
          type: boolean
          default: true
          description: |
            Apply domain-specific batch normalization
        - name: "--batch_size"
          type: integer
          default: 64
          description: |
            The batch size to be used for embedding inference.

  resources:
    - type: nextflow_script
      path: main.nf
      entrypoint: run_wf

  test_resources:
    - type: nextflow_script
      path: test.nf
      entrypoint: test_wf
    - path: /resources_test/scgpt

  dependencies:
    - name: scgpt/cross_check_genes
    - name: scgpt/binning
    - name: feature_annotation/highly_variable_features_scanpy
    - name: filter/do_filter
    - name: scgpt/pad_tokenize
    - name: scgpt/annotation

platforms:
  - type: nextflow
