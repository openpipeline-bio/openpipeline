functionality:
  name: umap
  namespace: "dimred"
  version: "dev"
  description: |
    UMAP (Uniform Manifold Approximation and Projection) is a manifold learning technique suitable for visualizing high-dimensional data. Besides tending to be faster than tSNE, it optimizes the embedding such that it best reflects the topology of the data, which we represent throughout Scanpy using a neighborhood graph. tSNE, by contrast, optimizes the distribution of nearest-neighbor distances in the embedding such that these best match the distribution of distances in the high-dimensional space. We use the implementation of umap-learn [McInnes18]. For a few comparisons of UMAP with tSNE, see this preprint.
  authors:
    - name: Dries De Maeyer
      email: ddemaeyer@gmail.com
      roles: [ maintainer ]
      props: { account: ddemaey1 }
  arguments:
    # inputs
    - name: "--input"
      type: file
      description: Input h5mu file
      direction: input
      required: true
      example: input.h5mu

    - name: "--modality"
      type: string
      multiple: true
      default: "rna"
      required: false

    # outputs
    - name: "--output"
      alternatives: ["-o"]
      type: file
      description: Output h5mu file.
      direction: output
      required: true
      example: output.h5mu

    - name: "--output_key"
      type: string
      description: The pre/postfix under which to store the UMAP results. # More specifically, .obsm["X_"+key], .uns[key] and .varm["loadings_"+key].
      default: "umap"
    
    # arguments
    - name: "--min_dist"
      type: double
      description: The effective minimum distance between embedded points. Smaller values will result in a more clustered/clumped embedding where nearby points on the manifold are drawn closer together, while larger values will result on a more even dispersal of points. The value should be set relative to the spread value, which determines the scale at which embedded points will be spread out. 
      default: 0.5

    - name: "--spread"
      type: double
      description: The effective scale of embedded points. In combination with min_dist this determines how clustered/clumped the embedded points are.
      default: 1.0

    - name: "--num_components"
      type: integer
      description: The number of dimensions of the embedding.
      default: 2

    - name: "--max_iter"
      type: integer
      description: The number of iterations (epochs) of the optimization.

    - name: "--alpha"
      type: double
      description: The initial learning rate for the embedding optimization.
      default: 1.0

    - name: "--gamma"
      type: double
      description: Weighting applied to negative samples in low dimensional embedding optimization. Values higher than one will result in greater weight being given to negative samples.
      default: 1.0

    - name: "--negative_sample_rate"
      type: integer
      description: The number of negative edge/1-simplex samples to use per positive edge/1-simplex sample in optimizing the low dimensional embedding.
      default: 5
      
    - name: "--init_pos"
      type: string
      description: How to initialize the low dimensional embedding. Called init in the original UMAP. Options are paga, spectral and random.
      default: spectral
  resources:
    - type: python_script
      path: script.py
  test_resources:
    - type: python_script
      path: run_test.py
    - path: ../../../resources_test/pbmc_1k_protein_v3
platforms:
  - type: docker
    image: python:3.8-slim
    python:
      packages:
        - scanpy~=1.9.1
        - muon
        - mudata~=0.1.2
        - anndata<0.8
  - type: nextflow
    variant: vdsl3
    directives:
      label: highcpu
