functionality:
  name: pynndescent_knn
  namespace: "labels_transfer"
  description: |
    This component generates a neighborhood graph based using the PyNNDescentTransformer, followed by classification using a k-nearest neighborhood vote.
  authors:
    - __merge__: /src/authors/dorien_roosen.yaml
      roles: [ maintainer, author ]
  argument_groups:
    - name: Input files
      arguments:
        - name: "--input"
          type: file
          direction: input
          required: true
          example: input.h5mu
          description: "The query data to transfer the labels to. Should be a .h5mu file."
        - name: "--modality"
          type: string
          default: "rna"
          required: false
          description: Which modality to use.
        - name: "--input_obsm_features"
          type: string
          required: true
          description: |
            The `.obsm` key of the embedding to use for the classifier's inference.
            Make sure that embedding was obtained in the same way as the reference embedding (e.g. by the same model, preprocessing and/or integration).
          example: X_scvi

    - name: Reference dataset arguments
      arguments:
        - name: "--reference"
          type: file
          required: true
          description: "Should be an h5mu file."
          example: reference.h5mu
        - name: "--reference_obsm_features"
          type: string
          required: true
          description: |
            The `.obsm` key of the embedding to use for the classifier's training.
            Make sure that embedding was obtained in the same way as the query embedding (e.g. by the same model or preprocessing).
          example: X_scvi
        - name: "--reference_obs_targets"
          type: string
          example: [ ann_level_1, ann_level_2, ann_level_3, ann_level_4, ann_level_5, ann_finest_level ]
          required: true
          multiple: true
          description: The `.obs` key(s) of the target labels to tranfer.

    - name: Outputs
      arguments:
        - name: "--output"
          type: file
          direction: output
          required: true
          description: "The query data in .h5mu format with predicted labels transfered from the reference."
        - name: "--output_obs_predictions"
          type: string
          required: false
          multiple: true
          description: |
            In which `.obs` slots to store the predicted information.
            If provided, must have the same length as `--reference_obs_targets`.
            If empty, will default to the `reference_obs_targets` combined with the `"_pred"` suffix.
        - name: "--output_obs_probability"
          type: string
          required: false
          multiple: true
          description: |
            In which `.obs` slots to store the probability of the predictions.
            If provided, must have the same length as `--reference_obs_targets`.
            If empty, will default to the `reference_obs_targets` combined with the `"_probability"` suffix.
        - name: "--output_uns_parameters"
          type: string
          default: "labels_transfer"
          required: false
          description: |
            The `.uns` key to store additional information about the parameters used for the label transfer.
        - name: "--output_compression"
          type: string
          description: |
            The compression format to be used on the output h5mu object.
          choices: ["gzip", "lzf"]
          required: false
          example: "gzip"
          
    - name: Neighbor classifier arguments
      arguments:
        - name: "--weights"
          type: string
          default: uniform
          required: false
          choices: [uniform, distance]
          description: |
            Weight function used in prediction. Possible values are:
            ‘uniform’ (all points in each neighborhood are weighted equally) or 
            'distance' (weight points by the inverse of their distance)

        - name: "--n_neighbors"
          type: integer
          default: 15
          required: false
          description: |
            The number of neighbors to use in k-neighbor graph structure used for fast approximate nearest neighbor search with PyNNDescent. 
            Larger values will result in more accurate search results at the cost of computation time.

  resources:
    - type: python_script
      path: script.py

platforms:
  - type: docker
    image: python:3.12
    setup:
      - type: apt
        packages: 
          - procps
          - pkg-config
          - libhdf5-dev
      - type: python
        __merge__: /src/base/requirements/anndata_mudata.yaml
  - type: native
  - type: nextflow
    directives:
      label: [singlecpu, lowmem]